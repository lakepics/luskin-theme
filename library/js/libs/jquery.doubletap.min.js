"use strict";!function(t){var e={swipeTolerance:40},i=function(e,i){this.target=t(e),this.touch=i,this.startX=this.currentX=i.screenX,this.startY=this.currentY=i.screenY,this.eventType=null};i.options={},i.latestTap=null,i.prototype.move=function(t){this.currentX=t.screenX,this.currentY=t.screenY},i.prototype.process=function(){var t=this.currentX-this.startX,e=this.currentY-this.startY;0==t&&0==e?this.checkForDoubleTap():Math.abs(e)>i.options.swipeTolerance&&Math.abs(e)>Math.abs(t)?(this.eventType=e>0?"swipedown":"swipeup",this.target.trigger("swipe",[this])):Math.abs(t)>i.options.swipeTolerance&&(this.eventType=t>0?"swiperight":"swipeleft",this.target.trigger("swipe",[this])),this.eventType&&this.target.trigger(this.eventType,[this]),this.target.trigger("touch",[this])},i.prototype.checkForDoubleTap=function(){i.latestTap&&new Date-i.latestTap<400&&(this.eventType="doubletap"),this.eventType||(this.eventType="tap"),i.latestTap=new Date};var n=function(n,o){i.options=t.extend(e,o),n.bind("touchstart",this.touchStart),n.bind("touchmove",this.touchMove),n.bind("touchcancel",this.touchCancel),n.bind("touchend",this.touchEnd)};n.prototype.touchStart=function(t){var e=this;n.eachTouch(t,function(t){n.touches[t.identifier]=new i(e,t)})},n.prototype.touchMove=function(t){n.eachTouch(t,function(t){var e=n.touches[t.identifier];e&&e.move(t)})},n.prototype.touchCancel=function(t){n.eachTouch(t,function(t){n.purge(t,!0)})},n.prototype.touchEnd=function(t){n.eachTouch(t,function(t){n.purge(t)})},n.touches={},n.purge=function(t,e){if(!e){var i=n.touches[t.identifier];i&&i.process()}delete n.touches[t.identifier]},n.eachTouch=function(t,e){for(var t=t.originalEvent,i=t.changedTouches.length,n=0;i>n;n++)e(t.changedTouches[n])},t.fn.addSwipeEvents=function(t,e){return!e&&jQuery.isFunction(t)&&(e=t,t=null),new n(this,t),e&&this.bind("touch",e),this}}(jQuery);
//# sourceMappingURL=data:application/json;base64,
