"use strict";var _typeof11="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},_typeof10="function"==typeof Symbol&&"symbol"===_typeof11(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":_typeof11(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":_typeof11(e)},_typeof9="function"==typeof Symbol&&"symbol"===_typeof10(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":_typeof10(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":_typeof10(e)},_typeof8="function"==typeof Symbol&&"symbol"===_typeof9(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":_typeof9(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":_typeof9(e)},_typeof7="function"==typeof Symbol&&"symbol"===_typeof8(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":_typeof8(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":_typeof8(e)},_typeof6="function"==typeof Symbol&&"symbol"===_typeof7(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":_typeof7(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":_typeof7(e)},_typeof5="function"==typeof Symbol&&"symbol"===_typeof6(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":_typeof6(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":_typeof6(e)},_typeof4="function"==typeof Symbol&&"symbol"===_typeof5(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":_typeof5(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":_typeof5(e)},_typeof3="function"==typeof Symbol&&"symbol"===_typeof4(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":_typeof4(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":_typeof4(e)},_typeof2="function"==typeof Symbol&&"symbol"===_typeof3(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":_typeof3(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":_typeof3(e)},_typeof="function"==typeof Symbol&&"symbol"===_typeof2(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":_typeof2(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":_typeof2(e)},swfobject=function(){function e(){if(!H){try{var e=x.getElementsByTagName("body")[0].appendChild(v("span"));e.parentNode.removeChild(e)}catch(t){return}H=!0;for(var n=P.length,o=0;n>o;o++)P[o]()}}function t(e){H?e():P[P.length]=e}function n(e){if(_typeof($.addEventListener)!=T)$.addEventListener("load",e,!1);else if(_typeof(x.addEventListener)!=T)x.addEventListener("load",e,!1);else if(_typeof($.attachEvent)!=T)b($,"onload",e);else if("function"==typeof $.onload){var t=$.onload;$.onload=function(){t(),e()}}else $.onload=e}function o(){V?i():r()}function i(){var e=x.getElementsByTagName("body")[0],t=v(L);t.setAttribute("type",B);var n=e.appendChild(t);if(n){var o=0;!function(){if(_typeof(n.GetVariable)!=T){var i=n.GetVariable("$version");i&&(i=i.split(" ")[1].split(","),J.pv=[parseInt(i[0],10),parseInt(i[1],10),parseInt(i[2],10)])}else if(10>o)return o++,void setTimeout(arguments.callee,10);e.removeChild(t),n=null,r()}()}else r()}function r(){var e=R.length;if(e>0)for(var t=0;e>t;t++){var n=R[t].id,o=R[t].callbackFn,i={success:!1,id:n};if(J.pv[0]>0){var r=m(n);if(r)if(!h(R[t].swfVersion)||J.wk&&J.wk<312)if(R[t].expressInstall&&a()){var u={};u.data=R[t].expressInstall,u.width=r.getAttribute("width")||"0",u.height=r.getAttribute("height")||"0",r.getAttribute("class")&&(u.styleclass=r.getAttribute("class")),r.getAttribute("align")&&(u.align=r.getAttribute("align"));for(var d={},y=r.getElementsByTagName("param"),c=y.length,p=0;c>p;p++)"movie"!=y[p].getAttribute("name").toLowerCase()&&(d[y[p].getAttribute("name")]=y[p].getAttribute("value"));l(u,d,n,o)}else s(r),o&&o(i);else w(n,!0),o&&(i.success=!0,i.ref=f(n),o(i))}else if(w(n,!0),o){var v=f(n);v&&_typeof(v.SetVariable)!=T&&(i.success=!0,i.ref=v),o(i)}}}function f(e){var t=null,n=m(e);if(n&&"OBJECT"==n.nodeName)if(_typeof(n.SetVariable)!=T)t=n;else{var o=n.getElementsByTagName(L)[0];o&&(t=o)}return t}function a(){return!U&&h("6.0.65")&&(J.win||J.mac)&&!(J.wk&&J.wk<312)}function l(e,t,n,o){U=!0,E=o||null,A={success:!1,id:n};var i=m(n);if(i){"OBJECT"==i.nodeName?(g=u(i),C=null):(g=i,C=n),e.id=O,(_typeof(e.width)==T||!/%$/.test(e.width)&&parseInt(e.width,10)<310)&&(e.width="310"),(_typeof(e.height)==T||!/%$/.test(e.height)&&parseInt(e.height,10)<137)&&(e.height="137"),x.title=x.title.slice(0,47)+" - Flash Player Installation";var r=J.ie&&J.win?"ActiveX":"PlugIn",f="MMredirectURL="+$.location.toString().replace(/&/g,"%26")+"&MMplayerType="+r+"&MMdoctitle="+x.title;if(_typeof(t.flashvars)!=T?t.flashvars+="&"+f:t.flashvars=f,J.ie&&J.win&&4!=i.readyState){var a=v("div");n+="SWFObjectNew",a.setAttribute("id",n),i.parentNode.insertBefore(a,i),i.style.display="none",function(){4==i.readyState?i.parentNode.removeChild(i):setTimeout(arguments.callee,10)}()}d(e,t,n)}}function s(e){if(J.ie&&J.win&&4!=e.readyState){var t=v("div");e.parentNode.insertBefore(t,e),t.parentNode.replaceChild(u(e),t),e.style.display="none",function(){4==e.readyState?e.parentNode.removeChild(e):setTimeout(arguments.callee,10)}()}else e.parentNode.replaceChild(u(e),e)}function u(e){var t=v("div");if(J.win&&J.ie)t.innerHTML=e.innerHTML;else{var n=e.getElementsByTagName(L)[0];if(n){var o=n.childNodes;if(o)for(var i=o.length,r=0;i>r;r++)1==o[r].nodeType&&"PARAM"==o[r].nodeName||8==o[r].nodeType||t.appendChild(o[r].cloneNode(!0))}}return t}function d(e,t,n){var o,i=m(n);if(J.wk&&J.wk<312)return o;if(i)if(_typeof(e.id)==T&&(e.id=n),J.ie&&J.win){var r="";for(var f in e)e[f]!=Object.prototype[f]&&("data"==f.toLowerCase()?t.movie=e[f]:"styleclass"==f.toLowerCase()?r+=' class="'+e[f]+'"':"classid"!=f.toLowerCase()&&(r+=" "+f+'="'+e[f]+'"'));var a="";for(var l in t)t[l]!=Object.prototype[l]&&(a+='<param name="'+l+'" value="'+t[l]+'" />');i.outerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"'+r+">"+a+"</object>",D[D.length]=e.id,o=m(e.id)}else{var s=v(L);s.setAttribute("type",B);for(var u in e)e[u]!=Object.prototype[u]&&("styleclass"==u.toLowerCase()?s.setAttribute("class",e[u]):"classid"!=u.toLowerCase()&&s.setAttribute(u,e[u]));for(var d in t)t[d]!=Object.prototype[d]&&"movie"!=d.toLowerCase()&&y(s,d,t[d]);i.parentNode.replaceChild(s,i),o=s}return o}function y(e,t,n){var o=v("param");o.setAttribute("name",t),o.setAttribute("value",n),e.appendChild(o)}function c(e){var t=m(e);t&&"OBJECT"==t.nodeName&&(J.ie&&J.win?(t.style.display="none",function(){4==t.readyState?p(e):setTimeout(arguments.callee,10)}()):t.parentNode.removeChild(t))}function p(e){var t=m(e);if(t){for(var n in t)"function"==typeof t[n]&&(t[n]=null);t.parentNode.removeChild(t)}}function m(e){var t=null;try{t=x.getElementById(e)}catch(n){}return t}function v(e){return x.createElement(e)}function b(e,t,n){e.attachEvent(t,n),W[W.length]=[e,t,n]}function h(e){var t=J.pv,n=e.split(".");return n[0]=parseInt(n[0],10),n[1]=parseInt(n[1],10)||0,n[2]=parseInt(n[2],10)||0,t[0]>n[0]||t[0]==n[0]&&t[1]>n[1]||t[0]==n[0]&&t[1]==n[1]&&t[2]>=n[2]}function S(e,t,n,o){if(!J.ie||!J.mac){var i=x.getElementsByTagName("head")[0];if(i){var r=n&&"string"==typeof n?n:"screen";if(o&&(I=null,N=null),!I||N!=r){var f=v("style");f.setAttribute("type","text/css"),f.setAttribute("media",r),I=i.appendChild(f),J.ie&&J.win&&_typeof(x.styleSheets)!=T&&x.styleSheets.length>0&&(I=x.styleSheets[x.styleSheets.length-1]),N=r}J.ie&&J.win?I&&_typeof(I.addRule)==L&&I.addRule(e,t):I&&_typeof(x.createTextNode)!=T&&I.appendChild(x.createTextNode(e+" {"+t+"}"))}}}function w(e,t){if(G){var n=t?"visible":"hidden";H&&m(e)?m(e).style.visibility=n:S("#"+e,"visibility:"+n)}}function _(e){var t=/[\\\"<>\.;]/,n=null!=t.exec(e);return n&&("undefined"==typeof encodeURIComponent?"undefined":_typeof(encodeURIComponent))!=T?encodeURIComponent(e):e}var g,C,E,A,I,N,T="undefined",L="object",k="Shockwave Flash",j="ShockwaveFlash.ShockwaveFlash",B="application/x-shockwave-flash",O="SWFObjectExprInst",F="onreadystatechange",$=window,x=document,M=navigator,V=!1,P=[o],R=[],D=[],W=[],H=!1,U=!1,G=!0,J=function(){var e=_typeof(x.getElementById)!=T&&_typeof(x.getElementsByTagName)!=T&&_typeof(x.createElement)!=T,t=M.userAgent.toLowerCase(),n=M.platform.toLowerCase(),o=n?/win/.test(n):/win/.test(t),i=n?/mac/.test(n):/mac/.test(t),r=/webkit/.test(t)?parseFloat(t.replace(/^.*webkit\/(\d+(\.\d+)?).*$/,"$1")):!1,f=!1,a=[0,0,0],l=null;if(_typeof(M.plugins)!=T&&_typeof(M.plugins[k])==L)l=M.plugins[k].description,!l||_typeof(M.mimeTypes)!=T&&M.mimeTypes[B]&&!M.mimeTypes[B].enabledPlugin||(V=!0,f=!1,l=l.replace(/^.*\s+(\S+\s+\S+$)/,"$1"),a[0]=parseInt(l.replace(/^(.*)\..*$/,"$1"),10),a[1]=parseInt(l.replace(/^.*\.(.*)\s.*$/,"$1"),10),a[2]=/[a-zA-Z]/.test(l)?parseInt(l.replace(/^.*[a-zA-Z]+(.*)$/,"$1"),10):0);else if(_typeof($.ActiveXObject)!=T)try{var s=new ActiveXObject(j);s&&(l=s.GetVariable("$version"),l&&(f=!0,l=l.split(" ")[1].split(","),a=[parseInt(l[0],10),parseInt(l[1],10),parseInt(l[2],10)]))}catch(u){}return{w3:e,pv:a,wk:r,ie:f,win:o,mac:i}}();(function(){J.w3&&((_typeof(x.readyState)!=T&&"complete"==x.readyState||_typeof(x.readyState)==T&&(x.getElementsByTagName("body")[0]||x.body))&&e(),H||(_typeof(x.addEventListener)!=T&&x.addEventListener("DOMContentLoaded",e,!1),J.ie&&J.win&&(x.attachEvent(F,function(){"complete"==x.readyState&&(x.detachEvent(F,arguments.callee),e())}),$==top&&!function(){if(!H){try{x.documentElement.doScroll("left")}catch(t){return void setTimeout(arguments.callee,0)}e()}}()),J.wk&&!function(){return H?void 0:/loaded|complete/.test(x.readyState)?void e():void setTimeout(arguments.callee,0)}(),n(e)))})(),function(){J.ie&&J.win&&window.attachEvent("onunload",function(){for(var e=W.length,t=0;e>t;t++)W[t][0].detachEvent(W[t][1],W[t][2]);for(var n=D.length,o=0;n>o;o++)c(D[o]);for(var i in J)J[i]=null;J=null;for(var r in swfobject)swfobject[r]=null;swfobject=null})}();return{registerObject:function(e,t,n,o){if(J.w3&&e&&t){var i={};i.id=e,i.swfVersion=t,i.expressInstall=n,i.callbackFn=o,R[R.length]=i,w(e,!1)}else o&&o({success:!1,id:e})},getObjectById:function(e){return J.w3?f(e):void 0},embedSWF:function(e,n,o,i,r,f,s,u,y,c){var p={success:!1,id:n};J.w3&&!(J.wk&&J.wk<312)&&e&&n&&o&&i&&r?(w(n,!1),t(function(){o+="",i+="";var t={};if(y&&("undefined"==typeof y?"undefined":_typeof(y))===L)for(var m in y)t[m]=y[m];t.data=e,t.width=o,t.height=i;var v={};if(u&&("undefined"==typeof u?"undefined":_typeof(u))===L)for(var b in u)v[b]=u[b];if(s&&("undefined"==typeof s?"undefined":_typeof(s))===L)for(var S in s)_typeof(v.flashvars)!=T?v.flashvars+="&"+S+"="+s[S]:v.flashvars=S+"="+s[S];if(h(r)){var _=d(t,v,n);t.id==n&&w(n,!0),p.success=!0,p.ref=_}else{if(f&&a())return t.data=f,void l(t,v,n,c);w(n,!0)}c&&c(p)})):c&&c(p)},switchOffAutoHideShow:function(){G=!1},ua:J,getFlashPlayerVersion:function(){return{major:J.pv[0],minor:J.pv[1],release:J.pv[2]}},hasFlashPlayerVersion:h,createSWF:function(e,t,n){return J.w3?d(e,t,n):void 0},showExpressInstall:function(e,t,n,o){J.w3&&a()&&l(e,t,n,o)},removeSWF:function(e){J.w3&&c(e)},createCSS:function(e,t,n,o){J.w3&&S(e,t,n,o)},addDomLoadEvent:t,addLoadEvent:n,getQueryParamValue:function(e){var t=x.location.search||x.location.hash;if(t){if(/\?/.test(t)&&(t=t.split("?")[1]),null==e)return _(t);for(var n=t.split("&"),o=0;o<n.length;o++)if(n[o].substring(0,n[o].indexOf("="))==e)return _(n[o].substring(n[o].indexOf("=")+1))}return""},expressInstallCallback:function(){if(U){var e=m(O);e&&g&&(e.parentNode.replaceChild(g,e),C&&(w(C,!0),J.ie&&J.win&&(g.style.display="block")),E&&E(A)),U=!1}}}}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnJhcnkvanMvbGlicy9zd2ZvYmplY3QyLmpzIl0sIm5hbWVzIjpbIl90eXBlb2YxMSIsIlN5bWJvbCIsIml0ZXJhdG9yIiwib2JqIiwiY29uc3RydWN0b3IiLCJfdHlwZW9mMTAiLCJfdHlwZW9mOSIsIl90eXBlb2Y4IiwiX3R5cGVvZjciLCJfdHlwZW9mNiIsIl90eXBlb2Y1IiwiX3R5cGVvZjQiLCJfdHlwZW9mMyIsIl90eXBlb2YyIiwiX3R5cGVvZiIsInN3Zm9iamVjdCIsImYiLCJKIiwiWiIsImoiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImFwcGVuZENoaWxkIiwiQyIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImFhIiwiWCIsIlUiLCJsZW5ndGgiLCJZIiwiSyIsInMiLCJPIiwiYWRkRXZlbnRMaXN0ZW5lciIsIkQiLCJhdHRhY2hFdmVudCIsImkiLCJvbmxvYWQiLCJoIiwiVCIsIlYiLCJIIiwiciIsInNldEF0dHJpYnV0ZSIsInEiLCJHZXRWYXJpYWJsZSIsImFiIiwic3BsaXQiLCJNIiwicHYiLCJwYXJzZUludCIsInNldFRpbWVvdXQiLCJhcmd1bWVudHMiLCJjYWxsZWUiLCJhZyIsIm8iLCJhZiIsImlkIiwiY2FsbGJhY2tGbiIsInN1Y2Nlc3MiLCJhZSIsImMiLCJGIiwic3dmVmVyc2lvbiIsIndrIiwiZXhwcmVzc0luc3RhbGwiLCJBIiwiYWkiLCJkYXRhIiwid2lkdGgiLCJnZXRBdHRyaWJ1dGUiLCJoZWlnaHQiLCJzdHlsZWNsYXNzIiwiYWxpZ24iLCJhaCIsImFjIiwiYWQiLCJ0b0xvd2VyQ2FzZSIsIlAiLCJwIiwidyIsInJlZiIsInoiLCJTZXRWYXJpYWJsZSIsIm5vZGVOYW1lIiwiYSIsIndpbiIsIm1hYyIsIkUiLCJCIiwibCIsImciLCJRIiwiUiIsInRlc3QiLCJ0aXRsZSIsInNsaWNlIiwiaWUiLCJsb2NhdGlvbiIsInRvU3RyaW5nIiwicmVwbGFjZSIsImZsYXNodmFycyIsInJlYWR5U3RhdGUiLCJpbnNlcnRCZWZvcmUiLCJzdHlsZSIsImRpc3BsYXkiLCJ1IiwicmVwbGFjZUNoaWxkIiwiaW5uZXJIVE1MIiwiY2hpbGROb2RlcyIsIm5vZGVUeXBlIiwiY2xvbmVOb2RlIiwiT2JqZWN0IiwicHJvdG90eXBlIiwibW92aWUiLCJvdXRlckhUTUwiLCJOIiwiZSIsInkiLCJiIiwiZ2V0RWxlbWVudEJ5SWQiLCJjcmVhdGVFbGVtZW50IiwiSSIsInYiLCJuIiwiRyIsInN0eWxlU2hlZXRzIiwiYWRkUnVsZSIsImNyZWF0ZVRleHROb2RlIiwibSIsInZpc2liaWxpdHkiLCJMIiwiZXhlYyIsImVuY29kZVVSSUNvbXBvbmVudCIsIlMiLCJXIiwieCIsIndpbmRvdyIsImRvY3VtZW50IiwidCIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInBsYXRmb3JtIiwicGFyc2VGbG9hdCIsInBsdWdpbnMiLCJkZXNjcmlwdGlvbiIsIm1pbWVUeXBlcyIsImVuYWJsZWRQbHVnaW4iLCJBY3RpdmVYT2JqZWN0IiwidzMiLCJib2R5IiwiZGV0YWNoRXZlbnQiLCJ0b3AiLCJkb2N1bWVudEVsZW1lbnQiLCJkb1Njcm9sbCIsInJlZ2lzdGVyT2JqZWN0IiwiZ2V0T2JqZWN0QnlJZCIsImVtYmVkU1dGIiwiYWoiLCJhbCIsImFtIiwiYWsiLCJhbiIsInN3aXRjaE9mZkF1dG9IaWRlU2hvdyIsInVhIiwiZ2V0Rmxhc2hQbGF5ZXJWZXJzaW9uIiwibWFqb3IiLCJtaW5vciIsInJlbGVhc2UiLCJoYXNGbGFzaFBsYXllclZlcnNpb24iLCJjcmVhdGVTV0YiLCJzaG93RXhwcmVzc0luc3RhbGwiLCJyZW1vdmVTV0YiLCJjcmVhdGVDU1MiLCJhZGREb21Mb2FkRXZlbnQiLCJhZGRMb2FkRXZlbnQiLCJnZXRRdWVyeVBhcmFtVmFsdWUiLCJzZWFyY2giLCJoYXNoIiwic3Vic3RyaW5nIiwiaW5kZXhPZiIsImV4cHJlc3NJbnN0YWxsQ2FsbGJhY2siXSwibWFwcGluZ3MiOiJBQUFBLFlBRUEsSUFBSUEsV0FBOEIsa0JBQVhDLFNBQW9ELGdCQUFw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QUVILEdBQUd5SixVQUFVLEVBQUd0SixFQUFFSCxHQUFHMEosUUFBUSxPQUFTM0osRUFDeEMsTUFBTzBHLEdBQUV0RyxFQUFFSCxHQUFHeUosVUFBVXRKLEVBQUVILEdBQUcwSixRQUFRLEtBQU8sSUFJeEQsTUFBTyxJQUVYQyx1QkFBd0IsV0FDcEIsR0FBSWhHLEVBQUcsQ0FDSCxHQUFJM0QsR0FBSW1DLEVBQUVnQyxFQUNObkUsSUFBS2dFLElBQ0xoRSxFQUFFSCxXQUFXb0YsYUFBYWpCLEVBQUdoRSxHQUN6QmtFLElBQ0FaLEVBQUVZLEdBQUcsR0FDRDVDLEVBQUVpRCxJQUFNakQsRUFBRXNDLE1BQ1ZJLEVBQUVjLE1BQU1DLFFBQVUsVUFHdEJqQixHQUNBQSxFQUFFQyxJQUdWSixHQUFJIiwiZmlsZSI6ImxpYnJhcnkvanMvbGlicy9zd2ZvYmplY3QyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfdHlwZW9mMTAgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iajtcbn0gOiBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbn07XG5cbnZhciBfdHlwZW9mOSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mMTAoU3ltYm9sLml0ZXJhdG9yKSA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiBfdHlwZW9mMTAob2JqKTtcbn0gOiBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iaiA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiBfdHlwZW9mMTAob2JqKTtcbn07XG5cbnZhciBfdHlwZW9mOCA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mOShTeW1ib2wuaXRlcmF0b3IpID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Y5KG9iaik7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmogPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZjkob2JqKTtcbn07XG5cbnZhciBfdHlwZW9mNyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mOChTeW1ib2wuaXRlcmF0b3IpID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Y4KG9iaik7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmogPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZjgob2JqKTtcbn07XG5cbnZhciBfdHlwZW9mNiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mNyhTeW1ib2wuaXRlcmF0b3IpID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Y3KG9iaik7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmogPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZjcob2JqKTtcbn07XG5cbnZhciBfdHlwZW9mNSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mNihTeW1ib2wuaXRlcmF0b3IpID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Y2KG9iaik7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmogPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZjYob2JqKTtcbn07XG5cbnZhciBfdHlwZW9mNCA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mNShTeW1ib2wuaXRlcmF0b3IpID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Y1KG9iaik7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmogPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZjUob2JqKTtcbn07XG5cbnZhciBfdHlwZW9mMyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mNChTeW1ib2wuaXRlcmF0b3IpID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Y0KG9iaik7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmogPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZjQob2JqKTtcbn07XG5cbnZhciBfdHlwZW9mMiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mMyhTeW1ib2wuaXRlcmF0b3IpID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2YzKG9iaik7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmogPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZjMob2JqKTtcbn07XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIF90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcikgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmogPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZjIob2JqKTtcbn0gOiBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iaiA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiBfdHlwZW9mMihvYmopO1xufTtcblxuLypcdFNXRk9iamVjdCB2Mi4yIDxodHRwOi8vY29kZS5nb29nbGUuY29tL3Avc3dmb2JqZWN0Lz4gXG5cdGlzIHJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZSA8aHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHA+IFxuKi9cbnZhciBzd2ZvYmplY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIEQgPSBcInVuZGVmaW5lZFwiLFxuICAgICAgICByID0gXCJvYmplY3RcIixcbiAgICAgICAgUyA9IFwiU2hvY2t3YXZlIEZsYXNoXCIsXG4gICAgICAgIFcgPSBcIlNob2Nrd2F2ZUZsYXNoLlNob2Nrd2F2ZUZsYXNoXCIsXG4gICAgICAgIHEgPSBcImFwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoXCIsXG4gICAgICAgIFIgPSBcIlNXRk9iamVjdEV4cHJJbnN0XCIsXG4gICAgICAgIHggPSBcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiLFxuICAgICAgICBPID0gd2luZG93LFxuICAgICAgICBqID0gZG9jdW1lbnQsXG4gICAgICAgIHQgPSBuYXZpZ2F0b3IsXG4gICAgICAgIFQgPSBmYWxzZSxcbiAgICAgICAgVSA9IFtoXSxcbiAgICAgICAgbyA9IFtdLFxuICAgICAgICBOID0gW10sXG4gICAgICAgIEkgPSBbXSxcbiAgICAgICAgbCxcbiAgICAgICAgUSxcbiAgICAgICAgRSxcbiAgICAgICAgQixcbiAgICAgICAgSiA9IGZhbHNlLFxuICAgICAgICBhID0gZmFsc2UsXG4gICAgICAgIG4sXG4gICAgICAgIEcsXG4gICAgICAgIG0gPSB0cnVlLFxuICAgICAgICBNID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGFhID0gX3R5cGVvZihqLmdldEVsZW1lbnRCeUlkKSAhPSBEICYmIF90eXBlb2Yoai5nZXRFbGVtZW50c0J5VGFnTmFtZSkgIT0gRCAmJiBfdHlwZW9mKGouY3JlYXRlRWxlbWVudCkgIT0gRCxcbiAgICAgICAgICAgICAgICBhaCA9IHQudXNlckFnZW50LnRvTG93ZXJDYXNlKCksXG4gICAgICAgICAgICAgICAgWSA9IHQucGxhdGZvcm0udG9Mb3dlckNhc2UoKSxcbiAgICAgICAgICAgICAgICBhZSA9IFkgPyAvd2luLy50ZXN0KFkpIDogL3dpbi8udGVzdChhaCksXG4gICAgICAgICAgICAgICAgYWMgPSBZID8gL21hYy8udGVzdChZKSA6IC9tYWMvLnRlc3QoYWgpLFxuICAgICAgICAgICAgICAgIGFmID0gL3dlYmtpdC8udGVzdChhaCkgPyBwYXJzZUZsb2F0KGFoLnJlcGxhY2UoL14uKndlYmtpdFxcLyhcXGQrKFxcLlxcZCspPykuKiQvLCBcIiQxXCIpKSA6IGZhbHNlLFxuICAgICAgICAgICAgICAgIFggPSAhK1wiXFx2MVwiLFxuICAgICAgICAgICAgICAgIGFnID0gWzAsIDAsIDBdLFxuICAgICAgICAgICAgICAgIGFiID0gbnVsbDtcbiAgICAgICAgICAgIGlmIChfdHlwZW9mKHQucGx1Z2lucykgIT0gRCAmJiBfdHlwZW9mKHQucGx1Z2luc1tTXSkgPT0gcikge1xuICAgICAgICAgICAgICAgIGFiID0gdC5wbHVnaW5zW1NdLmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgICAgIGlmIChhYiAmJiAhKF90eXBlb2YodC5taW1lVHlwZXMpICE9IEQgJiYgdC5taW1lVHlwZXNbcV0gJiYgIXQubWltZVR5cGVzW3FdLmVuYWJsZWRQbHVnaW4pKSB7XG4gICAgICAgICAgICAgICAgICAgIFQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBYID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIGFiID0gYWIucmVwbGFjZSgvXi4qXFxzKyhcXFMrXFxzK1xcUyskKS8sIFwiJDFcIik7XG4gICAgICAgICAgICAgICAgICAgIGFnWzBdID0gcGFyc2VJbnQoYWIucmVwbGFjZSgvXiguKilcXC4uKiQvLCBcIiQxXCIpLCAxMCk7XG4gICAgICAgICAgICAgICAgICAgIGFnWzFdID0gcGFyc2VJbnQoYWIucmVwbGFjZSgvXi4qXFwuKC4qKVxccy4qJC8sIFwiJDFcIiksIDEwKTtcbiAgICAgICAgICAgICAgICAgICAgYWdbMl0gPSAvW2EtekEtWl0vLnRlc3QoYWIpID8gcGFyc2VJbnQoYWIucmVwbGFjZSgvXi4qW2EtekEtWl0rKC4qKSQvLCBcIiQxXCIpLCAxMCkgOiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKF90eXBlb2YoTy5BY3RpdmVYT2JqZWN0KSAhPSBEKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWQgPSBuZXcgQWN0aXZlWE9iamVjdChXKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFiID0gYWQuR2V0VmFyaWFibGUoXCIkdmVyc2lvblwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFiID0gYWIuc3BsaXQoXCIgXCIpWzFdLnNwbGl0KFwiLFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWcgPSBbcGFyc2VJbnQoYWJbMF0sIDEwKSwgcGFyc2VJbnQoYWJbMV0sIDEwKSwgcGFyc2VJbnQoYWJbMl0sIDEwKV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChaKSB7fVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdzM6IGFhLFxuICAgICAgICAgICAgICAgIHB2OiBhZyxcbiAgICAgICAgICAgICAgICB3azogYWYsXG4gICAgICAgICAgICAgICAgaWU6IFgsXG4gICAgICAgICAgICAgICAgd2luOiBhZSxcbiAgICAgICAgICAgICAgICBtYWM6IGFjXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KCksXG4gICAgICAgIGsgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoIU0udzMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoX3R5cGVvZihqLnJlYWR5U3RhdGUpICE9IEQgJiYgai5yZWFkeVN0YXRlID09IFwiY29tcGxldGVcIiB8fCBfdHlwZW9mKGoucmVhZHlTdGF0ZSkgPT0gRCAmJiAoai5nZXRFbGVtZW50c0J5VGFnTmFtZShcImJvZHlcIilbMF0gfHwgai5ib2R5KSkge1xuICAgICAgICAgICAgICAgIGYoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghSikge1xuICAgICAgICAgICAgICAgIGlmIChfdHlwZW9mKGouYWRkRXZlbnRMaXN0ZW5lcikgIT0gRCkge1xuICAgICAgICAgICAgICAgICAgICBqLmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGYsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKE0uaWUgJiYgTS53aW4pIHtcbiAgICAgICAgICAgICAgICAgICAgai5hdHRhY2hFdmVudCh4LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoai5yZWFkeVN0YXRlID09IFwiY29tcGxldGVcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGouZGV0YWNoRXZlbnQoeCwgYXJndW1lbnRzLmNhbGxlZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKE8gPT0gdG9wKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChKKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgai5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGwoXCJsZWZ0XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKFgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChhcmd1bWVudHMuY2FsbGVlLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChNLndrKSB7XG4gICAgICAgICAgICAgICAgICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoSikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghL2xvYWRlZHxjb21wbGV0ZS8udGVzdChqLnJlYWR5U3RhdGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChhcmd1bWVudHMuY2FsbGVlLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBmKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHMoZik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0oKTtcblxuICAgIGZ1bmN0aW9uIGYoKSB7XG4gICAgICAgIGlmIChKKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciBaID0gai5nZXRFbGVtZW50c0J5VGFnTmFtZShcImJvZHlcIilbMF0uYXBwZW5kQ2hpbGQoQyhcInNwYW5cIikpO1xuICAgICAgICAgICAgWi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKFopO1xuICAgICAgICB9IGNhdGNoIChhYSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIEogPSB0cnVlO1xuICAgICAgICB2YXIgWCA9IFUubGVuZ3RoO1xuICAgICAgICBmb3IgKHZhciBZID0gMDsgWSA8IFg7IFkrKykge1xuICAgICAgICAgICAgVVtZXSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gSyhYKSB7XG4gICAgICAgIGlmIChKKSB7XG4gICAgICAgICAgICBYKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBVW1UubGVuZ3RoXSA9IFg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzKFkpIHtcbiAgICAgICAgaWYgKF90eXBlb2YoTy5hZGRFdmVudExpc3RlbmVyKSAhPSBEKSB7XG4gICAgICAgICAgICBPLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIFksIGZhbHNlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChfdHlwZW9mKGouYWRkRXZlbnRMaXN0ZW5lcikgIT0gRCkge1xuICAgICAgICAgICAgICAgIGouYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgWSwgZmFsc2UpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoX3R5cGVvZihPLmF0dGFjaEV2ZW50KSAhPSBEKSB7XG4gICAgICAgICAgICAgICAgICAgIGkoTywgXCJvbmxvYWRcIiwgWSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBPLm9ubG9hZCA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBYID0gTy5vbmxvYWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBPLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBYKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgWSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIE8ub25sb2FkID0gWTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGgoKSB7XG4gICAgICAgIGlmIChUKSB7XG4gICAgICAgICAgICBWKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBIKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBWKCkge1xuICAgICAgICB2YXIgWCA9IGouZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJib2R5XCIpWzBdO1xuICAgICAgICB2YXIgYWEgPSBDKHIpO1xuICAgICAgICBhYS5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIHEpO1xuICAgICAgICB2YXIgWiA9IFguYXBwZW5kQ2hpbGQoYWEpO1xuICAgICAgICBpZiAoWikge1xuICAgICAgICAgICAgdmFyIFkgPSAwO1xuICAgICAgICAgICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoX3R5cGVvZihaLkdldFZhcmlhYmxlKSAhPSBEKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhYiA9IFouR2V0VmFyaWFibGUoXCIkdmVyc2lvblwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhYiA9IGFiLnNwbGl0KFwiIFwiKVsxXS5zcGxpdChcIixcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBNLnB2ID0gW3BhcnNlSW50KGFiWzBdLCAxMCksIHBhcnNlSW50KGFiWzFdLCAxMCksIHBhcnNlSW50KGFiWzJdLCAxMCldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFkgPCAxMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgWSsrO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChhcmd1bWVudHMuY2FsbGVlLCAxMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgWC5yZW1vdmVDaGlsZChhYSk7XG4gICAgICAgICAgICAgICAgWiA9IG51bGw7XG4gICAgICAgICAgICAgICAgSCgpO1xuICAgICAgICAgICAgfSkoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIEgoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIEgoKSB7XG4gICAgICAgIHZhciBhZyA9IG8ubGVuZ3RoO1xuICAgICAgICBpZiAoYWcgPiAwKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBhZiA9IDA7IGFmIDwgYWc7IGFmKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgWSA9IG9bYWZdLmlkO1xuICAgICAgICAgICAgICAgIHZhciBhYiA9IG9bYWZdLmNhbGxiYWNrRm47XG4gICAgICAgICAgICAgICAgdmFyIGFhID0ge1xuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFlcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmIChNLnB2WzBdID4gMCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYWUgPSBjKFkpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoYWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChGKG9bYWZdLnN3ZlZlcnNpb24pICYmICEoTS53ayAmJiBNLndrIDwgMzEyKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHcoWSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFhLnN1Y2Nlc3MgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhYS5yZWYgPSB6KFkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhYihhYSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAob1thZl0uZXhwcmVzc0luc3RhbGwgJiYgQSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhaSA9IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhaS5kYXRhID0gb1thZl0uZXhwcmVzc0luc3RhbGw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFpLndpZHRoID0gYWUuZ2V0QXR0cmlidXRlKFwid2lkdGhcIikgfHwgXCIwXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFpLmhlaWdodCA9IGFlLmdldEF0dHJpYnV0ZShcImhlaWdodFwiKSB8fCBcIjBcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFlLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhaS5zdHlsZWNsYXNzID0gYWUuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFlLmdldEF0dHJpYnV0ZShcImFsaWduXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhaS5hbGlnbiA9IGFlLmdldEF0dHJpYnV0ZShcImFsaWduXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhaCA9IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgWCA9IGFlLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwicGFyYW1cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhYyA9IFgubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBhZCA9IDA7IGFkIDwgYWM7IGFkKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChYW2FkXS5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpLnRvTG93ZXJDYXNlKCkgIT0gXCJtb3ZpZVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWhbWFthZF0uZ2V0QXR0cmlidXRlKFwibmFtZVwiKV0gPSBYW2FkXS5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQKGFpLCBhaCwgWSwgYWIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAoYWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFiKGFhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHcoWSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhYikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIFogPSB6KFkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFogJiYgX3R5cGVvZihaLlNldFZhcmlhYmxlKSAhPSBEKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWEuc3VjY2VzcyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWEucmVmID0gWjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGFiKGFhKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHooYWEpIHtcbiAgICAgICAgdmFyIFggPSBudWxsO1xuICAgICAgICB2YXIgWSA9IGMoYWEpO1xuICAgICAgICBpZiAoWSAmJiBZLm5vZGVOYW1lID09IFwiT0JKRUNUXCIpIHtcbiAgICAgICAgICAgIGlmIChfdHlwZW9mKFkuU2V0VmFyaWFibGUpICE9IEQpIHtcbiAgICAgICAgICAgICAgICBYID0gWTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIFogPSBZLmdldEVsZW1lbnRzQnlUYWdOYW1lKHIpWzBdO1xuICAgICAgICAgICAgICAgIGlmIChaKSB7XG4gICAgICAgICAgICAgICAgICAgIFggPSBaO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gWDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBBKCkge1xuICAgICAgICByZXR1cm4gIWEgJiYgRihcIjYuMC42NVwiKSAmJiAoTS53aW4gfHwgTS5tYWMpICYmICEoTS53ayAmJiBNLndrIDwgMzEyKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBQKGFhLCBhYiwgWCwgWikge1xuICAgICAgICBhID0gdHJ1ZTtcbiAgICAgICAgRSA9IFogfHwgbnVsbDtcbiAgICAgICAgQiA9IHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgaWQ6IFhcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGFlID0gYyhYKTtcbiAgICAgICAgaWYgKGFlKSB7XG4gICAgICAgICAgICBpZiAoYWUubm9kZU5hbWUgPT0gXCJPQkpFQ1RcIikge1xuICAgICAgICAgICAgICAgIGwgPSBnKGFlKTtcbiAgICAgICAgICAgICAgICBRID0gbnVsbDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbCA9IGFlO1xuICAgICAgICAgICAgICAgIFEgPSBYO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYWEuaWQgPSBSO1xuICAgICAgICAgICAgaWYgKF90eXBlb2YoYWEud2lkdGgpID09IEQgfHwgIS8lJC8udGVzdChhYS53aWR0aCkgJiYgcGFyc2VJbnQoYWEud2lkdGgsIDEwKSA8IDMxMCkge1xuICAgICAgICAgICAgICAgIGFhLndpZHRoID0gXCIzMTBcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfdHlwZW9mKGFhLmhlaWdodCkgPT0gRCB8fCAhLyUkLy50ZXN0KGFhLmhlaWdodCkgJiYgcGFyc2VJbnQoYWEuaGVpZ2h0LCAxMCkgPCAxMzcpIHtcbiAgICAgICAgICAgICAgICBhYS5oZWlnaHQgPSBcIjEzN1wiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgai50aXRsZSA9IGoudGl0bGUuc2xpY2UoMCwgNDcpICsgXCIgLSBGbGFzaCBQbGF5ZXIgSW5zdGFsbGF0aW9uXCI7XG4gICAgICAgICAgICB2YXIgYWQgPSBNLmllICYmIE0ud2luID8gXCJBY3RpdmVYXCIgOiBcIlBsdWdJblwiLFxuICAgICAgICAgICAgICAgIGFjID0gXCJNTXJlZGlyZWN0VVJMPVwiICsgTy5sb2NhdGlvbi50b1N0cmluZygpLnJlcGxhY2UoLyYvZywgXCIlMjZcIikgKyBcIiZNTXBsYXllclR5cGU9XCIgKyBhZCArIFwiJk1NZG9jdGl0bGU9XCIgKyBqLnRpdGxlO1xuICAgICAgICAgICAgaWYgKF90eXBlb2YoYWIuZmxhc2h2YXJzKSAhPSBEKSB7XG4gICAgICAgICAgICAgICAgYWIuZmxhc2h2YXJzICs9IFwiJlwiICsgYWM7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGFiLmZsYXNodmFycyA9IGFjO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKE0uaWUgJiYgTS53aW4gJiYgYWUucmVhZHlTdGF0ZSAhPSA0KSB7XG4gICAgICAgICAgICAgICAgdmFyIFkgPSBDKFwiZGl2XCIpO1xuICAgICAgICAgICAgICAgIFggKz0gXCJTV0ZPYmplY3ROZXdcIjtcbiAgICAgICAgICAgICAgICBZLnNldEF0dHJpYnV0ZShcImlkXCIsIFgpO1xuICAgICAgICAgICAgICAgIGFlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKFksIGFlKTtcbiAgICAgICAgICAgICAgICBhZS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFlLnJlYWR5U3RhdGUgPT0gNCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChhZSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGFyZ3VtZW50cy5jYWxsZWUsIDEwKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1KGFhLCBhYiwgWCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwKFkpIHtcbiAgICAgICAgaWYgKE0uaWUgJiYgTS53aW4gJiYgWS5yZWFkeVN0YXRlICE9IDQpIHtcbiAgICAgICAgICAgIHZhciBYID0gQyhcImRpdlwiKTtcbiAgICAgICAgICAgIFkucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoWCwgWSk7XG4gICAgICAgICAgICBYLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGcoWSksIFgpO1xuICAgICAgICAgICAgWS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmIChZLnJlYWR5U3RhdGUgPT0gNCkge1xuICAgICAgICAgICAgICAgICAgICBZLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoWSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChhcmd1bWVudHMuY2FsbGVlLCAxMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIFkucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoZyhZKSwgWSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnKGFiKSB7XG4gICAgICAgIHZhciBhYSA9IEMoXCJkaXZcIik7XG4gICAgICAgIGlmIChNLndpbiAmJiBNLmllKSB7XG4gICAgICAgICAgICBhYS5pbm5lckhUTUwgPSBhYi5pbm5lckhUTUw7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgWSA9IGFiLmdldEVsZW1lbnRzQnlUYWdOYW1lKHIpWzBdO1xuICAgICAgICAgICAgaWYgKFkpIHtcbiAgICAgICAgICAgICAgICB2YXIgYWQgPSBZLmNoaWxkTm9kZXM7XG4gICAgICAgICAgICAgICAgaWYgKGFkKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBYID0gYWQubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBaID0gMDsgWiA8IFg7IForKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEoYWRbWl0ubm9kZVR5cGUgPT0gMSAmJiBhZFtaXS5ub2RlTmFtZSA9PSBcIlBBUkFNXCIpICYmICEoYWRbWl0ubm9kZVR5cGUgPT0gOCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhYS5hcHBlbmRDaGlsZChhZFtaXS5jbG9uZU5vZGUodHJ1ZSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhYTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB1KGFpLCBhZywgWSkge1xuICAgICAgICB2YXIgWCxcbiAgICAgICAgICAgIGFhID0gYyhZKTtcbiAgICAgICAgaWYgKE0ud2sgJiYgTS53ayA8IDMxMikge1xuICAgICAgICAgICAgcmV0dXJuIFg7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFhKSB7XG4gICAgICAgICAgICBpZiAoX3R5cGVvZihhaS5pZCkgPT0gRCkge1xuICAgICAgICAgICAgICAgIGFpLmlkID0gWTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChNLmllICYmIE0ud2luKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFoID0gXCJcIjtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBhZSBpbiBhaSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYWlbYWVdICE9IE9iamVjdC5wcm90b3R5cGVbYWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWUudG9Mb3dlckNhc2UoKSA9PSBcImRhdGFcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFnLm1vdmllID0gYWlbYWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWUudG9Mb3dlckNhc2UoKSA9PSBcInN0eWxlY2xhc3NcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhaCArPSAnIGNsYXNzPVwiJyArIGFpW2FlXSArICdcIic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFlLnRvTG93ZXJDYXNlKCkgIT0gXCJjbGFzc2lkXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFoICs9IFwiIFwiICsgYWUgKyAnPVwiJyArIGFpW2FlXSArICdcIic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGFmID0gXCJcIjtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBhZCBpbiBhZykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYWdbYWRdICE9IE9iamVjdC5wcm90b3R5cGVbYWRdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhZiArPSAnPHBhcmFtIG5hbWU9XCInICsgYWQgKyAnXCIgdmFsdWU9XCInICsgYWdbYWRdICsgJ1wiIC8+JztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhYS5vdXRlckhUTUwgPSAnPG9iamVjdCBjbGFzc2lkPVwiY2xzaWQ6RDI3Q0RCNkUtQUU2RC0xMWNmLTk2QjgtNDQ0NTUzNTQwMDAwXCInICsgYWggKyBcIj5cIiArIGFmICsgXCI8L29iamVjdD5cIjtcbiAgICAgICAgICAgICAgICBOW04ubGVuZ3RoXSA9IGFpLmlkO1xuICAgICAgICAgICAgICAgIFggPSBjKGFpLmlkKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIFogPSBDKHIpO1xuICAgICAgICAgICAgICAgIFouc2V0QXR0cmlidXRlKFwidHlwZVwiLCBxKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBhYyBpbiBhaSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYWlbYWNdICE9IE9iamVjdC5wcm90b3R5cGVbYWNdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWMudG9Mb3dlckNhc2UoKSA9PSBcInN0eWxlY2xhc3NcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFouc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgYWlbYWNdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFjLnRvTG93ZXJDYXNlKCkgIT0gXCJjbGFzc2lkXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWi5zZXRBdHRyaWJ1dGUoYWMsIGFpW2FjXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvciAodmFyIGFiIGluIGFnKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhZ1thYl0gIT0gT2JqZWN0LnByb3RvdHlwZVthYl0gJiYgYWIudG9Mb3dlckNhc2UoKSAhPSBcIm1vdmllXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUoWiwgYWIsIGFnW2FiXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYWEucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoWiwgYWEpO1xuICAgICAgICAgICAgICAgIFggPSBaO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBYO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGUoWiwgWCwgWSkge1xuICAgICAgICB2YXIgYWEgPSBDKFwicGFyYW1cIik7XG4gICAgICAgIGFhLnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgWCk7XG4gICAgICAgIGFhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIFkpO1xuICAgICAgICBaLmFwcGVuZENoaWxkKGFhKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB5KFkpIHtcbiAgICAgICAgdmFyIFggPSBjKFkpO1xuICAgICAgICBpZiAoWCAmJiBYLm5vZGVOYW1lID09IFwiT0JKRUNUXCIpIHtcbiAgICAgICAgICAgIGlmIChNLmllICYmIE0ud2luKSB7XG4gICAgICAgICAgICAgICAgWC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFgucmVhZHlTdGF0ZSA9PSA0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiKFkpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChhcmd1bWVudHMuY2FsbGVlLCAxMCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBYLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoWCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBiKFopIHtcbiAgICAgICAgdmFyIFkgPSBjKFopO1xuICAgICAgICBpZiAoWSkge1xuICAgICAgICAgICAgZm9yICh2YXIgWCBpbiBZKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBZW1hdID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgICAgICBZW1hdID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBZLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoWSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjKFopIHtcbiAgICAgICAgdmFyIFggPSBudWxsO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgWCA9IGouZ2V0RWxlbWVudEJ5SWQoWik7XG4gICAgICAgIH0gY2F0Y2ggKFkpIHt9XG4gICAgICAgIHJldHVybiBYO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIEMoWCkge1xuICAgICAgICByZXR1cm4gai5jcmVhdGVFbGVtZW50KFgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGkoWiwgWCwgWSkge1xuICAgICAgICBaLmF0dGFjaEV2ZW50KFgsIFkpO1xuICAgICAgICBJW0kubGVuZ3RoXSA9IFtaLCBYLCBZXTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBGKFopIHtcbiAgICAgICAgdmFyIFkgPSBNLnB2LFxuICAgICAgICAgICAgWCA9IFouc3BsaXQoXCIuXCIpO1xuICAgICAgICBYWzBdID0gcGFyc2VJbnQoWFswXSwgMTApO1xuICAgICAgICBYWzFdID0gcGFyc2VJbnQoWFsxXSwgMTApIHx8IDA7XG4gICAgICAgIFhbMl0gPSBwYXJzZUludChYWzJdLCAxMCkgfHwgMDtcbiAgICAgICAgcmV0dXJuIFlbMF0gPiBYWzBdIHx8IFlbMF0gPT0gWFswXSAmJiBZWzFdID4gWFsxXSB8fCBZWzBdID09IFhbMF0gJiYgWVsxXSA9PSBYWzFdICYmIFlbMl0gPj0gWFsyXSA/IHRydWUgOiBmYWxzZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB2KGFjLCBZLCBhZCwgYWIpIHtcbiAgICAgICAgaWYgKE0uaWUgJiYgTS5tYWMpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWEgPSBqLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXTtcbiAgICAgICAgaWYgKCFhYSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBYID0gYWQgJiYgdHlwZW9mIGFkID09IFwic3RyaW5nXCIgPyBhZCA6IFwic2NyZWVuXCI7XG4gICAgICAgIGlmIChhYikge1xuICAgICAgICAgICAgbiA9IG51bGw7XG4gICAgICAgICAgICBHID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIW4gfHwgRyAhPSBYKSB7XG4gICAgICAgICAgICB2YXIgWiA9IEMoXCJzdHlsZVwiKTtcbiAgICAgICAgICAgIFouc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInRleHQvY3NzXCIpO1xuICAgICAgICAgICAgWi5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBYKTtcbiAgICAgICAgICAgIG4gPSBhYS5hcHBlbmRDaGlsZChaKTtcbiAgICAgICAgICAgIGlmIChNLmllICYmIE0ud2luICYmIF90eXBlb2Yoai5zdHlsZVNoZWV0cykgIT0gRCAmJiBqLnN0eWxlU2hlZXRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBuID0gai5zdHlsZVNoZWV0c1tqLnN0eWxlU2hlZXRzLmxlbmd0aCAtIDFdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgRyA9IFg7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKE0uaWUgJiYgTS53aW4pIHtcbiAgICAgICAgICAgIGlmIChuICYmIF90eXBlb2Yobi5hZGRSdWxlKSA9PSByKSB7XG4gICAgICAgICAgICAgICAgbi5hZGRSdWxlKGFjLCBZKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChuICYmIF90eXBlb2Yoai5jcmVhdGVUZXh0Tm9kZSkgIT0gRCkge1xuICAgICAgICAgICAgICAgIG4uYXBwZW5kQ2hpbGQoai5jcmVhdGVUZXh0Tm9kZShhYyArIFwiIHtcIiArIFkgKyBcIn1cIikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdyhaLCBYKSB7XG4gICAgICAgIGlmICghbSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBZID0gWCA/IFwidmlzaWJsZVwiIDogXCJoaWRkZW5cIjtcbiAgICAgICAgaWYgKEogJiYgYyhaKSkge1xuICAgICAgICAgICAgYyhaKS5zdHlsZS52aXNpYmlsaXR5ID0gWTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHYoXCIjXCIgKyBaLCBcInZpc2liaWxpdHk6XCIgKyBZKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIEwoWSkge1xuICAgICAgICB2YXIgWiA9IC9bXFxcXFxcXCI8PlxcLjtdLztcbiAgICAgICAgdmFyIFggPSBaLmV4ZWMoWSkgIT0gbnVsbDtcbiAgICAgICAgcmV0dXJuIFggJiYgKHR5cGVvZiBlbmNvZGVVUklDb21wb25lbnQgPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZihlbmNvZGVVUklDb21wb25lbnQpKSAhPSBEID8gZW5jb2RlVVJJQ29tcG9uZW50KFkpIDogWTtcbiAgICB9XG4gICAgdmFyIGQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChNLmllICYmIE0ud2luKSB7XG4gICAgICAgICAgICB3aW5kb3cuYXR0YWNoRXZlbnQoXCJvbnVubG9hZFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFjID0gSS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgYWIgPSAwOyBhYiA8IGFjOyBhYisrKSB7XG4gICAgICAgICAgICAgICAgICAgIElbYWJdWzBdLmRldGFjaEV2ZW50KElbYWJdWzFdLCBJW2FiXVsyXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBaID0gTi5sZW5ndGg7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgYWEgPSAwOyBhYSA8IFo7IGFhKyspIHtcbiAgICAgICAgICAgICAgICAgICAgeShOW2FhXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvciAodmFyIFkgaW4gTSkge1xuICAgICAgICAgICAgICAgICAgICBNW1ldID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgTSA9IG51bGw7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgWCBpbiBzd2ZvYmplY3QpIHtcbiAgICAgICAgICAgICAgICAgICAgc3dmb2JqZWN0W1hdID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc3dmb2JqZWN0ID0gbnVsbDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlZ2lzdGVyT2JqZWN0OiBmdW5jdGlvbiByZWdpc3Rlck9iamVjdChhYiwgWCwgYWEsIFopIHtcbiAgICAgICAgICAgIGlmIChNLnczICYmIGFiICYmIFgpIHtcbiAgICAgICAgICAgICAgICB2YXIgWSA9IHt9O1xuICAgICAgICAgICAgICAgIFkuaWQgPSBhYjtcbiAgICAgICAgICAgICAgICBZLnN3ZlZlcnNpb24gPSBYO1xuICAgICAgICAgICAgICAgIFkuZXhwcmVzc0luc3RhbGwgPSBhYTtcbiAgICAgICAgICAgICAgICBZLmNhbGxiYWNrRm4gPSBaO1xuICAgICAgICAgICAgICAgIG9bby5sZW5ndGhdID0gWTtcbiAgICAgICAgICAgICAgICB3KGFiLCBmYWxzZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChaKSB7XG4gICAgICAgICAgICAgICAgICAgIFooe1xuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogYWJcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBnZXRPYmplY3RCeUlkOiBmdW5jdGlvbiBnZXRPYmplY3RCeUlkKFgpIHtcbiAgICAgICAgICAgIGlmIChNLnczKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHooWCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGVtYmVkU1dGOiBmdW5jdGlvbiBlbWJlZFNXRihhYiwgYWgsIGFlLCBhZywgWSwgYWEsIFosIGFkLCBhZiwgYWMpIHtcbiAgICAgICAgICAgIHZhciBYID0ge1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlkOiBhaFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmIChNLnczICYmICEoTS53ayAmJiBNLndrIDwgMzEyKSAmJiBhYiAmJiBhaCAmJiBhZSAmJiBhZyAmJiBZKSB7XG4gICAgICAgICAgICAgICAgdyhhaCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIEsoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBhZSArPSBcIlwiO1xuICAgICAgICAgICAgICAgICAgICBhZyArPSBcIlwiO1xuICAgICAgICAgICAgICAgICAgICB2YXIgYWogPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFmICYmICh0eXBlb2YgYWYgPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZihhZikpID09PSByKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBhbCBpbiBhZikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFqW2FsXSA9IGFmW2FsXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBhai5kYXRhID0gYWI7XG4gICAgICAgICAgICAgICAgICAgIGFqLndpZHRoID0gYWU7XG4gICAgICAgICAgICAgICAgICAgIGFqLmhlaWdodCA9IGFnO1xuICAgICAgICAgICAgICAgICAgICB2YXIgYW0gPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFkICYmICh0eXBlb2YgYWQgPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZihhZCkpID09PSByKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBhayBpbiBhZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFtW2FrXSA9IGFkW2FrXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoWiAmJiAodHlwZW9mIFogPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZihaKSkgPT09IHIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGFpIGluIFopIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoX3R5cGVvZihhbS5mbGFzaHZhcnMpICE9IEQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW0uZmxhc2h2YXJzICs9IFwiJlwiICsgYWkgKyBcIj1cIiArIFpbYWldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFtLmZsYXNodmFycyA9IGFpICsgXCI9XCIgKyBaW2FpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKEYoWSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhbiA9IHUoYWosIGFtLCBhaCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWouaWQgPT0gYWgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3KGFoLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIFguc3VjY2VzcyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBYLnJlZiA9IGFuO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFhICYmIEEoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFqLmRhdGEgPSBhYTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBQKGFqLCBhbSwgYWgsIGFjKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHcoYWgsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChhYykge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWMoWCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKGFjKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjKFgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc3dpdGNoT2ZmQXV0b0hpZGVTaG93OiBmdW5jdGlvbiBzd2l0Y2hPZmZBdXRvSGlkZVNob3coKSB7XG4gICAgICAgICAgICBtID0gZmFsc2U7XG4gICAgICAgIH0sXG4gICAgICAgIHVhOiBNLFxuICAgICAgICBnZXRGbGFzaFBsYXllclZlcnNpb246IGZ1bmN0aW9uIGdldEZsYXNoUGxheWVyVmVyc2lvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbWFqb3I6IE0ucHZbMF0sXG4gICAgICAgICAgICAgICAgbWlub3I6IE0ucHZbMV0sXG4gICAgICAgICAgICAgICAgcmVsZWFzZTogTS5wdlsyXVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgaGFzRmxhc2hQbGF5ZXJWZXJzaW9uOiBGLFxuICAgICAgICBjcmVhdGVTV0Y6IGZ1bmN0aW9uIGNyZWF0ZVNXRihaLCBZLCBYKSB7XG4gICAgICAgICAgICBpZiAoTS53Mykge1xuICAgICAgICAgICAgICAgIHJldHVybiB1KFosIFksIFgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzaG93RXhwcmVzc0luc3RhbGw6IGZ1bmN0aW9uIHNob3dFeHByZXNzSW5zdGFsbChaLCBhYSwgWCwgWSkge1xuICAgICAgICAgICAgaWYgKE0udzMgJiYgQSgpKSB7XG4gICAgICAgICAgICAgICAgUChaLCBhYSwgWCwgWSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHJlbW92ZVNXRjogZnVuY3Rpb24gcmVtb3ZlU1dGKFgpIHtcbiAgICAgICAgICAgIGlmIChNLnczKSB7XG4gICAgICAgICAgICAgICAgeShYKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgY3JlYXRlQ1NTOiBmdW5jdGlvbiBjcmVhdGVDU1MoYWEsIFosIFksIFgpIHtcbiAgICAgICAgICAgIGlmIChNLnczKSB7XG4gICAgICAgICAgICAgICAgdihhYSwgWiwgWSwgWCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGFkZERvbUxvYWRFdmVudDogSyxcbiAgICAgICAgYWRkTG9hZEV2ZW50OiBzLFxuICAgICAgICBnZXRRdWVyeVBhcmFtVmFsdWU6IGZ1bmN0aW9uIGdldFF1ZXJ5UGFyYW1WYWx1ZShhYSkge1xuICAgICAgICAgICAgdmFyIFogPSBqLmxvY2F0aW9uLnNlYXJjaCB8fCBqLmxvY2F0aW9uLmhhc2g7XG4gICAgICAgICAgICBpZiAoWikge1xuICAgICAgICAgICAgICAgIGlmICgvXFw/Ly50ZXN0KFopKSB7XG4gICAgICAgICAgICAgICAgICAgIFogPSBaLnNwbGl0KFwiP1wiKVsxXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGFhID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEwoWik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBZID0gWi5zcGxpdChcIiZcIik7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgWCA9IDA7IFggPCBZLmxlbmd0aDsgWCsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChZW1hdLnN1YnN0cmluZygwLCBZW1hdLmluZGV4T2YoXCI9XCIpKSA9PSBhYSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEwoWVtYXS5zdWJzdHJpbmcoWVtYXS5pbmRleE9mKFwiPVwiKSArIDEpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICB9LFxuICAgICAgICBleHByZXNzSW5zdGFsbENhbGxiYWNrOiBmdW5jdGlvbiBleHByZXNzSW5zdGFsbENhbGxiYWNrKCkge1xuICAgICAgICAgICAgaWYgKGEpIHtcbiAgICAgICAgICAgICAgICB2YXIgWCA9IGMoUik7XG4gICAgICAgICAgICAgICAgaWYgKFggJiYgbCkge1xuICAgICAgICAgICAgICAgICAgICBYLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGwsIFgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoUSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdyhRLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChNLmllICYmIE0ud2luKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChFKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBFKEIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGEgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG59KCk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
