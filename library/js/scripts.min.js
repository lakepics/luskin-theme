"use strict";function updateViewportDimensions(){var e=window,t=document,a=t.documentElement,n=t.getElementsByTagName("body")[0],i=e.innerWidth||a.clientWidth||n.clientWidth,o=e.innerHeight||a.clientHeight||n.clientHeight;return{width:i,height:o}}function loadGravatars(){viewport=updateViewportDimensions(),viewport.width>=768&&jQuery(".comment img[data-gravatar]").each(function(){jQuery(this).attr("src",jQuery(this).attr("data-gravatar"))})}var viewport=updateViewportDimensions(),waitForFinalEvent=function(){var e={};return function(t,a,n){n||(n="Don't call this twice without a uniqueId"),e[n]&&clearTimeout(e[n]),e[n]=setTimeout(t,a)}}(),timeToWaitForLast=100;jQuery(document).ready(function(e){function t(){781>r.width()?(n.attr("aria-expanded","false"),i.attr("aria-expanded","false"),n.attr("aria-controls","primary-menu")):(n.removeAttr("aria-expanded"),i.removeAttr("aria-expanded"),n.removeAttr("aria-controls"))}var a,n,i,o=e("body"),r=e(window);a=e("#primary-navigation"),n=a.find(".menu-toggle"),i=a.find(".nav-menu"),function(){return a&&n?i&&i.children().length?void n.on("click.twentyfourteen",function(){a.toggleClass("toggled-on"),a.hasClass("toggled-on")?(e(this).attr("aria-expanded","true"),i.attr("aria-expanded","true")):(e(this).attr("aria-expanded","false"),i.attr("aria-expanded","false"))}):void n.hide():void 0}(),r.on("hashchange.twentyfourteen",function(){var e,t=location.hash.substring(1);t&&(e=document.getElementById(t),e&&(/^(?:a|select|input|button|textarea)$/i.test(e.tagName)||(e.tabIndex=-1),e.focus(),window.scrollBy(0,-80)))}),e(function(){if(e(".search-toggle").on("click.twentyfourteen",function(t){var a=e(this),n=e("#search-container"),i=a.find("a");a.toggleClass("active"),n.toggleClass("hide"),a.hasClass("active")?i.attr("aria-expanded","true"):i.attr("aria-expanded","false"),(a.is(".active")||e(".search-toggle .screen-reader-text")[0]===t.target)&&n.find(".search-field").focus()}),r.width()>781){var t,a,n=e("#masthead").height();n>48&&o.removeClass("masthead-fixed"),o.is(".header-image")&&(t=o.is(".admin-bar")?e("#wpadminbar").height():0,a=e("#masthead").offset().top-t,r.on("scroll.twentyfourteen",function(){r.scrollTop()>a&&49>n?o.addClass("masthead-fixed"):o.removeClass("masthead-fixed")}))}e(".primary-navigation, .secondary-navigation").find("a").on("focus.twentyfourteen blur.twentyfourteen",function(){e(this).parents().toggleClass("focus")})}),r.on("load.twentyfourteen",t).on("resize.twentyfourteen",function(){t()}),r.load(function(){e.isFunction(e.fn.masonry)&&e("#footer-sidebar").masonry({itemSelector:".widget",columnWidth:function(e){return e/4},gutterWidth:0,isResizable:!0,isRTL:e("body").is(".rtl")}),o.is(".slider")&&e(".featured-content").featuredslider({selector:".featured-content-inner > article",controlsContainer:".featured-content"})}),e("html").addClass("js");for(var s=0,d=document.getElementsByTagName("input").length;d>s;s++)document.getElementsByTagName("input")[s].className+=" "+document.getElementsByTagName("input")[s].type;for(var l=window.location.hostname,c=document.getElementsByTagName("a"),u=/^https?:\/\/(www.)?/i,s=0,d=c.length;d>s;s++)u.test(c[s].href)&&-1==c[s].href.toLowerCase().indexOf(l)&&(c[s].target="_blank",c[s].className+=" external");e("textarea, input:text").bind("focus click",function(){this.value==this.defaultValue&&(this.value="")}).bind("blur",function(){""==this.value&&(this.value=this.defaultValue)}),e("#main-navigation").clone().insertAfter(".mobile-navigation > a.logo-ucla-mobile").removeAttr("id"),e("#toggle-menu").bind("click touch",function(){e("div.mobile-navigation").hasClass("open")?(e("div.mobile-navigation").animate({width:"0px"},300).removeClass("open").css({display:"hidden"}),e("#container, .not-frontpage #header").animate({left:"0px"},300)):(e("div.mobile-navigation").animate({width:"300px"},300).addClass("open").css({display:"block"}),e("#container, .not-frontpage #header").animate({left:"300px"},300))}),e(".room-types-mobile .room-type-div-toggle").hide(),e(".room-types-mobile .room-type-div-toggle-trigger").bind("click touch",function(){e(this).next(".room-type-div-toggle").slideToggle("fast")}),e(function(){})});
//# sourceMappingURL=data:application/json;base64,
