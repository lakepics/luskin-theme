"use strict";function updateViewportDimensions(){var e=window,t=document,i=t.documentElement,n=t.getElementsByTagName("body")[0],o=e.innerWidth||i.clientWidth||n.clientWidth,a=e.innerHeight||i.clientHeight||n.clientHeight;return{width:o,height:a}}function loadGravatars(){viewport=updateViewportDimensions(),viewport.width>=768&&jQuery(".comment img[data-gravatar]").each(function(){jQuery(this).attr("src",jQuery(this).attr("data-gravatar"))})}var viewport=updateViewportDimensions(),waitForFinalEvent=function(){var e={};return function(t,i,n){n||(n="Don't call this twice without a uniqueId"),e[n]&&clearTimeout(e[n]),e[n]=setTimeout(t,i)}}(),timeToWaitForLast=100;!function(e){e("html").addClass("js");for(var t=0,i=document.getElementsByTagName("input").length;t<i;t++)document.getElementsByTagName("input")[t].className+=" "+document.getElementsByTagName("input")[t].type;for(var n=window.location.hostname,o=document.getElementsByTagName("a"),a=/^https?:\/\/(www.)?/i,l=0,s=o.length;l<s;l++)a.test(o[l].href)&&o[l].href.toLowerCase().indexOf(n)==-1&&(o[l].target="_blank",o[l].className+=" external");e("textarea, input:text").bind("focus click",function(){this.value==this.defaultValue&&(this.value="")}).bind("blur",function(){""===this.value&&(this.value=this.defaultValue)}),e("#main-navigation").clone().insertAfter(".mobile-navigation > a.logo-ucla-mobile").removeAttr("id"),e("#toggle-menu").bind("click touch",function(){e("div.mobile-navigation").hasClass("open")?(e("div.mobile-navigation").animate({width:"0px"},300).removeClass("open").css({display:"hidden"}),e(".mobile-navigation > .nav-menu, .mobile-navigation > .mobile-room-reservation").hide(),e("#container, .not-frontpage #header").animate({left:"0px"},300)):(e("div.mobile-navigation").animate({width:"300px"},300).addClass("open").css({display:"block"}),e(".mobile-navigation > .nav-menu, .mobile-navigation > .mobile-room-reservation").fadeIn(1e3),e("#container, .not-frontpage #header").animate({left:"300px"},300))}),e(".room-types-mobile .room-type-div-toggle").hide(),e(".room-types-mobile .room-type-div-toggle-trigger").bind("click touch",function(){e(this).next(".room-type-div-toggle").slideToggle("fast")});var r=document.getElementById("video");r.addEventListener("click",function(){r.play()},!1),e("#submit").click(function(t){e("#NotListed").is(":checked")&&(e("#note").show(300),e("input[type=submit]").hide(),t.preventDefault())}),e("input[name=groupCode]").focus(function(){e(this).removeClass("highlight")}),e("#note,#gr-note,#ipam-note").hide(),e(".myRadio").click(function(){e("#note").hide(300),e("#submit").show(),e("input[name=groupCode]").removeClass("highlight")}),e("#NotListed").click(function(){e("#note").show(300),e("input[type=submit]").hide(),e("input[name=GroupCode]").removeClass("highlight")}),e("#groupRes").click(function(){e("#gr-note").show(300),e("#ipam-note").hide()}),e("#IPAM").click(function(){e("#ipam-note").show(300),e("#gr-note").hide()})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnJhcnkvanMvc2NyaXB0cy5qcyJdLCJuYW1lcyI6WyJ1cGRhdGVWaWV3cG9ydERpbWVuc2lvbnMiLCJ3Iiwid2luZG93IiwiZCIsImRvY3VtZW50IiwiZSIsImRvY3VtZW50RWxlbWVudCIsImciLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsIngiLCJpbm5lcldpZHRoIiwiY2xpZW50V2lkdGgiLCJ5IiwiaW5uZXJIZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJ3aWR0aCIsImhlaWdodCIsImxvYWRHcmF2YXRhcnMiLCJ2aWV3cG9ydCIsImpRdWVyeSIsImVhY2giLCJ0aGlzIiwiYXR0ciIsIndhaXRGb3JGaW5hbEV2ZW50IiwidGltZXJzIiwiY2FsbGJhY2siLCJtcyIsInVuaXF1ZUlkIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsInRpbWVUb1dhaXRGb3JMYXN0IiwiJCIsImFkZENsYXNzIiwiaSIsImxlbiIsImxlbmd0aCIsImNsYXNzTmFtZSIsInR5cGUiLCJob3N0bmFtZSIsImxvY2F0aW9uIiwibGlua3MiLCJwYXR0ZXJuIiwiaiIsImxpbmtsZW4iLCJ0ZXN0IiwiaHJlZiIsInRvTG93ZXJDYXNlIiwiaW5kZXhPZiIsInRhcmdldCIsImJpbmQiLCJ2YWx1ZSIsImRlZmF1bHRWYWx1ZSIsImNsb25lIiwiaW5zZXJ0QWZ0ZXIiLCJyZW1vdmVBdHRyIiwiaGFzQ2xhc3MiLCJhbmltYXRlIiwicmVtb3ZlQ2xhc3MiLCJjc3MiLCJkaXNwbGF5IiwiaGlkZSIsImxlZnQiLCJmYWRlSW4iLCJuZXh0Iiwic2xpZGVUb2dnbGUiLCJ2aWRlbyIsImdldEVsZW1lbnRCeUlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsInBsYXkiLCJjbGljayIsImV2ZW50IiwiaXMiLCJzaG93IiwicHJldmVudERlZmF1bHQiLCJmb2N1cyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFLQSxTQUFTQSw0QkFDTCxHQUFJQyxHQUFJQyxPQUNKQyxFQUFJQyxTQUNKQyxFQUFJRixFQUFFRyxn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Q2J6QyxFQUFFLHlCQUF5QjBCLFlBQVksZUFJM0MxQixFQUFFLGNBQWNzQyxNQUFNLFdBQ2xCdEMsRUFBRSxTQUFTeUMsS0FBSyxLQUNoQnpDLEVBQUUsc0JBQXNCNkIsT0FDeEI3QixFQUFFLHlCQUF5QjBCLFlBQVksZUFNM0MxQixFQUFFLGFBQWFzQyxNQUFNLFdBQ2pCdEMsRUFBRSxZQUFZeUMsS0FBSyxLQUNuQnpDLEVBQUUsY0FBYzZCLFNBTXBCN0IsRUFBRSxTQUFTc0MsTUFBTSxXQUNidEMsRUFBRSxjQUFjeUMsS0FBSyxLQUNyQnpDLEVBQUUsWUFBWTZCLFVBS3BCekMiLCJmaWxlIjoibGlicmFyeS9qcy9zY3JpcHRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogR2V0IFZpZXdwb3J0IERpbWVuc2lvbnNcclxuICogcmV0dXJucyBvYmplY3Qgd2l0aCB2aWV3cG9ydCBkaW1lbnNpb25zIHRvIG1hdGNoIGNzcyBpbiB3aWR0aCBhbmQgaGVpZ2h0IHByb3BlcnRpZXNcclxuICogKCBzb3VyY2U6IGh0dHA6Ly9hbmR5bGFuZ3Rvbi5jby51ay9ibG9nL2RldmVsb3BtZW50L2dldC12aWV3cG9ydC1zaXplLXdpZHRoLWFuZC1oZWlnaHQtamF2YXNjcmlwdCApXHJcbiAqL1xyXG5mdW5jdGlvbiB1cGRhdGVWaWV3cG9ydERpbWVuc2lvbnMoKSB7XHJcbiAgICB2YXIgdyA9IHdpbmRvdyxcclxuICAgICAgICBkID0gZG9jdW1lbnQsXHJcbiAgICAgICAgZSA9IGQuZG9jdW1lbnRFbGVtZW50LFxyXG4gICAgICAgIGcgPSBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5JylbMF0sXHJcbiAgICAgICAgeCA9IHcuaW5uZXJXaWR0aCB8fCBlLmNsaWVudFdpZHRoIHx8IGcuY2xpZW50V2lkdGgsXHJcbiAgICAgICAgeSA9IHcuaW5uZXJIZWlnaHQgfHwgZS5jbGllbnRIZWlnaHQgfHwgZy5jbGllbnRIZWlnaHQ7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHdpZHRoOiB4LFxyXG4gICAgICAgIGhlaWdodDogeVxyXG4gICAgfTtcclxufVxyXG4vLyBzZXR0aW5nIHRoZSB2aWV3cG9ydCB3aWR0aFxyXG52YXIgdmlld3BvcnQgPSB1cGRhdGVWaWV3cG9ydERpbWVuc2lvbnMoKTtcclxuXHJcbi8qXHJcbiAqIFRocm90dGxlIFJlc2l6ZS10cmlnZ2VyZWQgRXZlbnRzXHJcbiAqIFdyYXAgeW91ciBhY3Rpb25zIGluIHRoaXMgZnVuY3Rpb24gdG8gdGhyb3R0bGUgdGhlIGZyZXF1ZW5jeSBvZiBmaXJpbmcgdGhlbSBvZmYsIGZvciBiZXR0ZXIgcGVyZm9ybWFuY2UsIGVzcC4gb24gbW9iaWxlLlxyXG4gKiAoIHNvdXJjZTogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8yODU0NDA3L2phdmFzY3JpcHQtanF1ZXJ5LXdpbmRvdy1yZXNpemUtaG93LXRvLWZpcmUtYWZ0ZXItdGhlLXJlc2l6ZS1pcy1jb21wbGV0ZWQgKVxyXG4gKi9cclxudmFyIHdhaXRGb3JGaW5hbEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHRpbWVycyA9IHt9O1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjYWxsYmFjaywgbXMsIHVuaXF1ZUlkKSB7XHJcbiAgICAgICAgaWYgKCF1bmlxdWVJZCkge1xyXG4gICAgICAgICAgICB1bmlxdWVJZCA9IFwiRG9uJ3QgY2FsbCB0aGlzIHR3aWNlIHdpdGhvdXQgYSB1bmlxdWVJZFwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGltZXJzW3VuaXF1ZUlkXSkge1xyXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXJzW3VuaXF1ZUlkXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRpbWVyc1t1bmlxdWVJZF0gPSBzZXRUaW1lb3V0KGNhbGxiYWNrLCBtcyk7XHJcbiAgICB9O1xyXG59KCk7XHJcbi8vIGhvdyBsb25nIHRvIHdhaXQgYmVmb3JlIGRlY2lkaW5nIHRoZSByZXNpemUgaGFzIHN0b3BwZWQsIGluIG1zLiBBcm91bmQgNTAtMTAwIHNob3VsZCB3b3JrIG9rLlxyXG52YXIgdGltZVRvV2FpdEZvckxhc3QgPSAxMDA7XHJcblxyXG4vKlxyXG4gKiBIZXJlJ3MgYW4gZXhhbXBsZSBzbyB5b3UgY2FuIHNlZSBob3cgd2UncmUgdXNpbmcgdGhlIGFib3ZlIGZ1bmN0aW9uXHJcbiAqXHJcbiAqIFRoaXMgaXMgY29tbWVudGVkIG91dCBzbyBpdCB3b24ndCB3b3JrLCBidXQgeW91IGNhbiBjb3B5IGl0IGFuZFxyXG4gKiByZW1vdmUgdGhlIGNvbW1lbnRzLlxyXG4gKlxyXG4gKlxyXG4gKlxyXG4gKiBJZiB3ZSB3YW50IHRvIG9ubHkgZG8gaXQgb24gYSBjZXJ0YWluIHBhZ2UsIHdlIGNhbiBzZXR1cCBjaGVja3Mgc28gd2UgZG8gaXRcclxuICogYXMgZWZmaWNpZW50IGFzIHBvc3NpYmxlLlxyXG4gKlxyXG4gKiBpZiggdHlwZW9mIGlzX2hvbWUgPT09IFwidW5kZWZpbmVkXCIgKSB2YXIgaXNfaG9tZSA9ICQoJ2JvZHknKS5oYXNDbGFzcygnaG9tZScpO1xyXG4gKlxyXG4gKiBUaGlzIG9uY2UgY2hlY2tzIHRvIHNlZSBpZiB5b3UncmUgb24gdGhlIGhvbWUgcGFnZSBiYXNlZCBvbiB0aGUgYm9keSBjbGFzc1xyXG4gKiBXZSBjYW4gdGhlbiB1c2UgdGhhdCBjaGVjayB0byBwZXJmb3JtIGFjdGlvbnMgb24gdGhlIGhvbWUgcGFnZSBvbmx5XHJcbiAqXHJcbiAqIFdoZW4gdGhlIHdpbmRvdyBpcyByZXNpemVkLCB3ZSBwZXJmb3JtIHRoaXMgZnVuY3Rpb25cclxuICogJCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbiAoKSB7XHJcbiAqXHJcbiAqICAgIC8vIGlmIHdlJ3JlIG9uIHRoZSBob21lIHBhZ2UsIHdlIHdhaXQgdGhlIHNldCBhbW91bnQgKGluIGZ1bmN0aW9uIGFib3ZlKSB0aGVuIGZpcmUgdGhlIGZ1bmN0aW9uXHJcbiAqICAgIGlmKCBpc19ob21lICkgeyB3YWl0Rm9yRmluYWxFdmVudCggZnVuY3Rpb24oKSB7XHJcbiAqXHJcbiAqXHQvLyB1cGRhdGUgdGhlIHZpZXdwb3J0LCBpbiBjYXNlIHRoZSB3aW5kb3cgc2l6ZSBoYXMgY2hhbmdlZFxyXG4gKlx0dmlld3BvcnQgPSB1cGRhdGVWaWV3cG9ydERpbWVuc2lvbnMoKTtcclxuICpcclxuICogICAgICAvLyBpZiB3ZSdyZSBhYm92ZSBvciBlcXVhbCB0byA3NjggZmlyZSB0aGlzIG9mZlxyXG4gKiAgICAgIGlmKCB2aWV3cG9ydC53aWR0aCA+PSA3NjggKSB7XHJcbiAqICAgICAgICBjb25zb2xlLmxvZygnT24gaG9tZSBwYWdlIGFuZCB3aW5kb3cgc2l6ZWQgdG8gNzY4IHdpZHRoIG9yIG1vcmUuJyk7XHJcbiAqICAgICAgfSBlbHNlIHtcclxuICogICAgICAgIC8vIG90aGVyd2lzZSwgbGV0J3MgZG8gdGhpcyBpbnN0ZWFkXHJcbiAqICAgICAgICBjb25zb2xlLmxvZygnTm90IG9uIGhvbWUgcGFnZSwgb3Igd2luZG93IHNpemVkIHRvIGxlc3MgdGhhbiA3NjguJyk7XHJcbiAqICAgICAgfVxyXG4gKlxyXG4gKiAgICB9LCB0aW1lVG9XYWl0Rm9yTGFzdCwgXCJ5b3VyLWZ1bmN0aW9uLWlkZW50aWZpZXItc3RyaW5nXCIpOyB9XHJcbiAqIH0pO1xyXG4gKlxyXG4gKiBQcmV0dHkgY29vbCBodWg/IFlvdSBjYW4gY3JlYXRlIGZ1bmN0aW9ucyBsaWtlIHRoaXMgdG8gY29uZGl0aW9uYWxseSBsb2FkXHJcbiAqIGNvbnRlbnQgYW5kIG90aGVyIHN0dWZmIGRlcGVuZGVudCBvbiB0aGUgdmlld3BvcnQuXHJcbiAqIFJlbWVtYmVyIHRoYXQgbW9iaWxlIGRldmljZXMgYW5kIGphdmFzY3JpcHQgYXJlbid0IHRoZSBiZXN0IG9mIGZyaWVuZHMuXHJcbiAqIEtlZXAgaXQgbGlnaHQgYW5kIGFsd2F5cyBtYWtlIHN1cmUgdGhlIGxhcmdlciB2aWV3cG9ydHMgYXJlIGRvaW5nIHRoZSBoZWF2eSBsaWZ0aW5nLlxyXG4gKlxyXG4gKi9cclxuXHJcbi8qXHJcbiAqIFdlJ3JlIGdvaW5nIHRvIHN3YXAgb3V0IHRoZSBncmF2YXRhcnMuXHJcbiAqIEluIHRoZSBmdW5jdGlvbnMucGhwIGZpbGUsIHlvdSBjYW4gc2VlIHdlJ3JlIG5vdCBsb2FkaW5nIHRoZSBncmF2YXRhclxyXG4gKiBpbWFnZXMgb24gbW9iaWxlIHRvIHNhdmUgYmFuZHdpZHRoLiBPbmNlIHdlIGhpdCBhbiBhY2NlcHRhYmxlIHZpZXdwb3J0XHJcbiAqIHRoZW4gd2UgY2FuIHN3YXAgb3V0IHRob3NlIGltYWdlcyBzaW5jZSB0aGV5IGFyZSBsb2NhdGVkIGluIGEgZGF0YSBhdHRyaWJ1dGUuXHJcbiAqL1xyXG5mdW5jdGlvbiBsb2FkR3JhdmF0YXJzKCkge1xyXG4gICAgLy8gc2V0IHRoZSB2aWV3cG9ydCB1c2luZyB0aGUgZnVuY3Rpb24gYWJvdmVcclxuICAgIHZpZXdwb3J0ID0gdXBkYXRlVmlld3BvcnREaW1lbnNpb25zKCk7XHJcbiAgICAvLyBpZiB0aGUgdmlld3BvcnQgaXMgdGFibGV0IG9yIGxhcmdlciwgd2UgbG9hZCBpbiB0aGUgZ3JhdmF0YXJzXHJcbiAgICBpZiAodmlld3BvcnQud2lkdGggPj0gNzY4KSB7XHJcbiAgICAgICAgalF1ZXJ5KCcuY29tbWVudCBpbWdbZGF0YS1ncmF2YXRhcl0nKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgalF1ZXJ5KHRoaXMpLmF0dHIoJ3NyYycsIGpRdWVyeSh0aGlzKS5hdHRyKCdkYXRhLWdyYXZhdGFyJykpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59IC8vIGVuZCBmdW5jdGlvblxyXG5cclxuXHJcbi8qXHJcbiAqIFB1dCBhbGwgb2YgeW91ciBzY3JpcHQgaW4gaGVyZS5cclxuICovXHJcbihmdW5jdGlvbiAoJCkge1xyXG4gICAgLypcclxuICAgICAqIExldCdzIGZpcmUgb2ZmIHRoZSBncmF2YXRhciBmdW5jdGlvbiB5b3UgY2FuIHJlbW92ZSB0aGlzIGlmIHlvdSBkb24ndCBuZWVkIGl0XHJcbiAgICAgKi9cclxuICAgIC8vIGxvYWRHcmF2YXRhcnMoKTtcclxuXHJcbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gdXRpbHMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLy9cclxuXHJcbiAgICAkKCdodG1sJykuYWRkQ2xhc3MoJ2pzJyk7XHJcblxyXG4gICAgLy9hZGQgY2xhc3NlcyB0byBmb3JtIGlucHV0cyBiYXNlZCBvbiB0aGVpciB0eXBlXHJcbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2lucHV0JykubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaW5wdXQnKVtpXS5jbGFzc05hbWUgKz0gJyAnICsgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2lucHV0JylbaV0udHlwZTtcclxuICAgIH1cclxuXHJcbiAgICAvL29wZW4gbGlua3MgaW4gbmV3IHdpbmRvdyAodGFyZ2V0PV9ibGFuayk7IGNoZWNrcyBpZiB0aGUgdXJsIGlzIGV4dGVybmFsXHJcbiAgICB2YXIgaG9zdG5hbWUgPSB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUsXHJcbiAgICAgICAgbGlua3MgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYScpLFxyXG4gICAgICAgIHBhdHRlcm4gPSAvXmh0dHBzPzpcXC9cXC8od3d3Lik/L2k7XHJcblxyXG4gICAgZm9yICh2YXIgaiA9IDAsIGxpbmtsZW4gPSBsaW5rcy5sZW5ndGg7IGogPCBsaW5rbGVuOyBqKyspIHtcclxuICAgICAgICBpZiAocGF0dGVybi50ZXN0KGxpbmtzW2pdLmhyZWYpICYmIGxpbmtzW2pdLmhyZWYudG9Mb3dlckNhc2UoKS5pbmRleE9mKGhvc3RuYW1lKSA9PSAtMSkge1xyXG4gICAgICAgICAgICBsaW5rc1tqXS50YXJnZXQgPSBcIl9ibGFua1wiO1xyXG4gICAgICAgICAgICBsaW5rc1tqXS5jbGFzc05hbWUgKz0gJyBleHRlcm5hbCc7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vY2xlYXIgZm9ybSBmaWVsZHMgb24gZm9jdXNcclxuICAgICQoJ3RleHRhcmVhLCBpbnB1dDp0ZXh0JykuYmluZCgnZm9jdXMgY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudmFsdWUgPT0gdGhpcy5kZWZhdWx0VmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy52YWx1ZSA9ICcnO1xyXG4gICAgICAgIH1cclxuICAgIH0pLmJpbmQoJ2JsdXInLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudmFsdWUgPT09ICcnKSB7XHJcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLmRlZmF1bHRWYWx1ZTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvL2VxdWFsIGhlaWdodCBjb2x1bW5zIGZ1bmN0aW9uXHJcbiAgICBmdW5jdGlvbiBlcXVhbEhlaWdodChncm91cCkge1xyXG4gICAgICAgIHZhciB0YWxsZXN0ID0gMDtcclxuICAgICAgICBncm91cC5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIHRoaXNIZWlnaHQgPSAkKHRoaXMpLmhlaWdodCgpO1xyXG4gICAgICAgICAgICBpZiAodGhpc0hlaWdodCA+IHRhbGxlc3QpIHtcclxuICAgICAgICAgICAgICAgIHRhbGxlc3QgPSB0aGlzSGVpZ2h0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZ3JvdXAuaGVpZ2h0KHRhbGxlc3QpO1xyXG4gICAgfVxyXG4gICAgLy9lcXVhbEhlaWdodCgkKFwiLy9oZXJlIHB1dCB0aGUgc2VsZWN0b3JcIikpO1xyXG5cclxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIG90aGVyIHNjcmlwdHMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vL1xyXG5cclxuICAgIC8vIG1vYmlsZSBuYXZcclxuICAgICQoJyNtYWluLW5hdmlnYXRpb24nKS5jbG9uZSgpLmluc2VydEFmdGVyKCcubW9iaWxlLW5hdmlnYXRpb24gPiBhLmxvZ28tdWNsYS1tb2JpbGUnKS5yZW1vdmVBdHRyKCdpZCcpO1xyXG4gICAgJCgnI3RvZ2dsZS1tZW51JykuYmluZCgnY2xpY2sgdG91Y2gnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gaWYgb3BlbmVkXHJcbiAgICAgICAgaWYgKCQoJ2Rpdi5tb2JpbGUtbmF2aWdhdGlvbicpLmhhc0NsYXNzKCdvcGVuJykpIHtcclxuICAgICAgICAgICAgJCgnZGl2Lm1vYmlsZS1uYXZpZ2F0aW9uJykuYW5pbWF0ZSh7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogXCIwcHhcIlxyXG4gICAgICAgICAgICB9LCAzMDApLnJlbW92ZUNsYXNzKCdvcGVuJykuY3NzKHtcclxuICAgICAgICAgICAgICAgICdkaXNwbGF5JzogJ2hpZGRlbidcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICQoJy5tb2JpbGUtbmF2aWdhdGlvbiA+IC5uYXYtbWVudSwgLm1vYmlsZS1uYXZpZ2F0aW9uID4gLm1vYmlsZS1yb29tLXJlc2VydmF0aW9uJykuaGlkZSgpO1xyXG4gICAgICAgICAgICAkKCcjY29udGFpbmVyLCAubm90LWZyb250cGFnZSAjaGVhZGVyJykuYW5pbWF0ZSh7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiBcIjBweFwiXHJcbiAgICAgICAgICAgIH0sIDMwMCk7XHJcbiAgICAgICAgICAgIC8vIGlmIGNsb3NlZFxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICQoJ2Rpdi5tb2JpbGUtbmF2aWdhdGlvbicpLmFuaW1hdGUoe1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IFwiMzAwcHhcIlxyXG4gICAgICAgICAgICB9LCAzMDApLmFkZENsYXNzKCdvcGVuJykuY3NzKHtcclxuICAgICAgICAgICAgICAgICdkaXNwbGF5JzogJ2Jsb2NrJ1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgJCgnLm1vYmlsZS1uYXZpZ2F0aW9uID4gLm5hdi1tZW51LCAubW9iaWxlLW5hdmlnYXRpb24gPiAubW9iaWxlLXJvb20tcmVzZXJ2YXRpb24nKS5mYWRlSW4oMTAwMCk7XHJcbiAgICAgICAgICAgICQoJyNjb250YWluZXIsIC5ub3QtZnJvbnRwYWdlICNoZWFkZXInKS5hbmltYXRlKHtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IFwiMzAwcHhcIlxyXG4gICAgICAgICAgICB9LCAzMDApO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIHRvb2dsZSByb29tIHR5cGVcclxuICAgICQoJy5yb29tLXR5cGVzLW1vYmlsZSAucm9vbS10eXBlLWRpdi10b2dnbGUnKS5oaWRlKCk7XHJcbiAgICAkKCcucm9vbS10eXBlcy1tb2JpbGUgLnJvb20tdHlwZS1kaXYtdG9nZ2xlLXRyaWdnZXInKS5iaW5kKCdjbGljayB0b3VjaCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyAgJCh0aGlzKS50b2dnbGVDbGFzcygnZXhwYW5kZWQnKTtcclxuICAgICAgICAkKHRoaXMpLm5leHQoJy5yb29tLXR5cGUtZGl2LXRvZ2dsZScpLnNsaWRlVG9nZ2xlKCdmYXN0Jyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvL19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18gTWFrZSBWaWRlb3MgUGxheSBvbkNsaWNrIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18vL1xyXG4gICAgdmFyIHZpZGVvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ZpZGVvJyk7XHJcbiAgICB2aWRlby5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2aWRlby5wbGF5KCk7XHJcbiAgICB9LCBmYWxzZSk7XHJcblxyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFJlc2VydmUgU2NyaXB0cyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLy9cclxuICAgIC8vaWYgdGhlIHN1Ym1pdCBidXR0b24gaXMgY2xpY2tlZFxyXG4gICAgJCgnI3N1Ym1pdCcpLmNsaWNrKGZ1bmN0aW9uIChldmVudCkge1xyXG5cclxuICAgICAgICAvKlxyXG4gICAgICAgIGlmIHVzZXIgc2VsZWN0cyBOb3QgTGlzdGVkIHRoZW4gcmVmcmVzaGVzIHBhZ2UsIEkgd2FudCB0byBtYWtlIHN1cmVcclxuICAgICAgICBzdWJtaXQgYnV0dG9uIGlzIGRpc2FibGVkIGFuZCBtZXNzYWdlIHNob3dzLlxyXG4gICAgICAgICovXHJcbiAgICAgICAgaWYgKCQoJyNOb3RMaXN0ZWQnKS5pcygnOmNoZWNrZWQnKSkge1xyXG4gICAgICAgICAgICAkKCcjbm90ZScpLnNob3coMzAwKTtcclxuICAgICAgICAgICAgJCgnaW5wdXRbdHlwZT1zdWJtaXRdJykuaGlkZSgpO1xyXG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIC8vaWYgcmFkaW8gaXMgY2hlY2tlZCwgYnV0IHVzZXIgZGlkbid0IGZpbGwgb3V0IGdyb3VwIGNvZGUuXHJcbiAgICAgICAgLyogaWYoJCgnI2dyb3VwUmVzJykuaXMoJzpjaGVja2VkJykpIHtcclxuXHJcbiAgICAgICAgXHRpZigkKCdpbnB1dFtuYW1lPWdyb3VwQ29kZV0nKS52YWwoKSA9PSAnJykge1xyXG4gICAgICAgIFx0XHQkKCdpbnB1dFtuYW1lPWdyb3VwQ29kZV0nKS5hZGRDbGFzcygnaGlnaGxpZ2h0JylcclxuICAgICAgICBcdFx0cmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICBcdH1cclxuXHJcbiAgICAgICAgXHRpZigkKCdpbnB1dFtuYW1lPWdyb3VwQ29kZV0nKS52YWwoKS50b1VwcGVyQ2FzZSgpID09ICcwMjEnIHx8ICQoJ2lucHV0W25hbWU9Z3JvdXBDb2RlXScpLnZhbCgpLnRvVXBwZXJDYXNlKCkgPT0gJzE1QycgfHwgJCgnaW5wdXRbbmFtZT1ncm91cENvZGVdJykudmFsKCkudG9VcHBlckNhc2UoKSA9PSAnMTBIJyB8fCAkKCdpbnB1dFtuYW1lPWdyb3VwQ29kZV0nKS52YWwoKS50b1VwcGVyQ2FzZSgpID09ICcwMkUnIHx8ICQoJ2lucHV0W25hbWU9Z3JvdXBDb2RlXScpLnZhbCgpLnRvVXBwZXJDYXNlKCkgPT0gJ0FORDEyJyB8fCAkKCdpbnB1dFtuYW1lPWdyb3VwQ29kZV0nKS52YWwoKS50b1VwcGVyQ2FzZSgpID09ICdZTFUyQScgfHwgJCgnaW5wdXRbbmFtZT1ncm91cENvZGVdJykudmFsKCkudG9VcHBlckNhc2UoKSA9PSAnQ1RBMlAnIHx8ICQoJ2lucHV0W25hbWU9Z3JvdXBDb2RlXScpLnZhbCgpLnRvVXBwZXJDYXNlKCkgPT0gJ0xFRjJBJyB8fCAkKCdpbnB1dFtuYW1lPWdyb3VwQ29kZV0nKS52YWwoKS50b1VwcGVyQ2FzZSgpID09ICdNSU0yQScgfHwgJCgnaW5wdXRbbmFtZT1ncm91cENvZGVdJykudmFsKCkudG9VcHBlckNhc2UoKSA9PSAnQ1VDMkEnIHx8ICQoJ2lucHV0W25hbWU9Z3JvdXBDb2RlXScpLnZhbCgpLnRvVXBwZXJDYXNlKCkgPT0gJ0dTQTNCJyB8fCAkKCdpbnB1dFtuYW1lPWdyb3VwQ29kZV0nKS52YWwoKS50b1VwcGVyQ2FzZSgpID09ICdJU1IxQScgfHwgJCgnaW5wdXRbbmFtZT1ncm91cENvZGVdJykudmFsKCkudG9VcHBlckNhc2UoKSA9PSAnTklIM1gnIHx8ICQoJ2lucHV0W25hbWU9Z3JvdXBDb2RlXScpLnZhbCgpLnRvVXBwZXJDYXNlKCkgPT0gJ1NCQTNWJyB8fCAkKCdpbnB1dFtuYW1lPWdyb3VwQ29kZV0nKS52YWwoKS50b1VwcGVyQ2FzZSgpID09ICdUU0E0QScgfHwgJCgnaW5wdXRbbmFtZT1ncm91cENvZGVdJykudmFsKCkudG9VcHBlckNhc2UoKSA9PSAnRUJTMTQnXHJcblxyXG4gICAgICAgIFx0fHwgJCgnaW5wdXRbbmFtZT1ncm91cENvZGVdJykudmFsKCkudG9VcHBlckNhc2UoKSA9PSAnQUlTMTYnXHJcbiAgICAgICAgXHR8fCAkKCdpbnB1dFtuYW1lPWdyb3VwQ29kZV0nKS52YWwoKS50b1VwcGVyQ2FzZSgpID09ICdDR1AxNidcclxuICAgICAgICBcdHx8ICQoJ2lucHV0W25hbWU9Z3JvdXBDb2RlXScpLnZhbCgpLnRvVXBwZXJDYXNlKCkgPT0gJ0xFUDE2J1xyXG4gICAgICAgIFx0fHwgJCgnaW5wdXRbbmFtZT1ncm91cENvZGVdJykudmFsKCkudG9VcHBlckNhc2UoKSA9PSAnTElCNkEnKVxyXG4gICAgICAgIFx0fVxyXG4gICAgICAgIFx0ZWxzZXtcclxuICAgICAgICBcdFx0JCgnaW5wdXRbbmFtZT1ncm91cENvZGVdJykuYWRkQ2xhc3MoJ2hpZ2hsaWdodCcpXHJcbiAgICAgICAgXHRcdHJldHVybiBmYWxzZTtcclxuICAgICAgICBcdH0gKi9cclxuICAgIH0pO1xyXG5cclxuICAgIC8vaWYgdGhlIHVzZXIgY2xpY2tzIGluc2lkZSB0ZXh0IGJveCwgSSByZW1vdmUgdGhlIGhpZ2hsaWdodCBjbGFzc1xyXG4gICAgJCgnaW5wdXRbbmFtZT1ncm91cENvZGVdJykuZm9jdXMoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoJ2hpZ2hsaWdodCcpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gaGlkZXMgYWZmaWxpYXRpb24gbm90ZSBvbiBwYWdlIGxvYWRcclxuICAgICQoJyNub3RlLCNnci1ub3RlLCNpcGFtLW5vdGUnKS5oaWRlKCk7XHJcblxyXG4gICAgJCgnLm15UmFkaW8nKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCgnI25vdGUnKS5oaWRlKDMwMCk7XHJcbiAgICAgICAgJCgnI3N1Ym1pdCcpLnNob3coKTtcclxuICAgICAgICAkKCdpbnB1dFtuYW1lPWdyb3VwQ29kZV0nKS5yZW1vdmVDbGFzcygnaGlnaGxpZ2h0JylcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIHNob3cgYWZmaWxpYXRpb24gbm90ZSBvbiBjbGljazsgaGlkZSBmb3Igb3RoZXJzXHJcbiAgICAkKCcjTm90TGlzdGVkJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJyNub3RlJykuc2hvdygzMDApO1xyXG4gICAgICAgICQoJ2lucHV0W3R5cGU9c3VibWl0XScpLmhpZGUoKTtcclxuICAgICAgICAkKCdpbnB1dFtuYW1lPUdyb3VwQ29kZV0nKS5yZW1vdmVDbGFzcygnaGlnaGxpZ2h0JylcclxuICAgIH0pO1xyXG5cclxuICAgIC8qXHJcbiAgICBpZiB1c2VyIHNlbGVjdHMgQ29uZmVyZW5jZSBDb2RlIHRoZW4gZGlzcGxheSBhIG5vdGUgYmVsb3cgdGhlIHNlbGVjdGlvbi5cclxuICAgICovXHJcbiAgICAkKCcjZ3JvdXBSZXMnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCgnI2dyLW5vdGUnKS5zaG93KDMwMCk7XHJcbiAgICAgICAgJCgnI2lwYW0tbm90ZScpLmhpZGUoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8qXHJcbiAgICBpZiB1c2VyIHNlbGVjdHMgSVBBTSBDb2RlIHRoZW4gZGlzcGxheSBhIG5vdGUgYmVsb3cgdGhlIHNlbGVjdGlvbi5cclxuICAgICovXHJcbiAgICAkKCcjSVBBTScpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcjaXBhbS1ub3RlJykuc2hvdygzMDApO1xyXG4gICAgICAgICQoJyNnci1ub3RlJykuaGlkZSgpO1xyXG4gICAgfSk7XHJcblxyXG5cclxuXHJcbn0oalF1ZXJ5KSk7XHJcbiJdfQ==
