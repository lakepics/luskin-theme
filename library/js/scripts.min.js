"use strict";function updateViewportDimensions(){var e=window,t=document,o=t.documentElement,i=t.getElementsByTagName("body")[0],a=e.innerWidth||o.clientWidth||i.clientWidth,n=e.innerHeight||o.clientHeight||i.clientHeight;return{width:a,height:n}}function loadGravatars(){viewport=updateViewportDimensions(),viewport.width>=768&&jQuery(".comment img[data-gravatar]").each(function(){jQuery(this).attr("src",jQuery(this).attr("data-gravatar"))})}var viewport=updateViewportDimensions(),waitForFinalEvent=function(){var e={};return function(t,o,i){i||(i="Don't call this twice without a uniqueId"),e[i]&&clearTimeout(e[i]),e[i]=setTimeout(t,o)}}(),timeToWaitForLast=100;!function(e){e("html").addClass("js");for(var t=0,o=document.getElementsByTagName("input").length;o>t;t++)document.getElementsByTagName("input")[t].className+=" "+document.getElementsByTagName("input")[t].type;for(var i=window.location.hostname,a=document.getElementsByTagName("a"),n=/^https?:\/\/(www.)?/i,p=0,r=a.length;r>p;p++)n.test(a[p].href)&&-1==a[p].href.toLowerCase().indexOf(i)&&(a[p].target="_blank",a[p].className+=" external");e("textarea, input:text").bind("focus click",function(){this.value==this.defaultValue&&(this.value="")}).bind("blur",function(){""===this.value&&(this.value=this.defaultValue)}),e("#main-navigation").clone().insertAfter(".mobile-navigation > a.logo-ucla-mobile").removeAttr("id"),e("#toggle-menu").bind("click touch",function(){e("div.mobile-navigation").hasClass("open")?(e("div.mobile-navigation").animate({width:"0px"},300).removeClass("open").css({display:"hidden"}),e(".mobile-navigation > .nav-menu, .mobile-navigation > .mobile-room-reservation").hide(),e("#container, .not-frontpage #header").animate({left:"0px"},300)):(e("div.mobile-navigation").animate({width:"300px"},300).addClass("open").css({display:"block"}),e(".mobile-navigation > .nav-menu, .mobile-navigation > .mobile-room-reservation").fadeIn(1e3),e("#container, .not-frontpage #header").animate({left:"300px"},300))}),e(".room-types-mobile .room-type-div-toggle").hide(),e(".room-types-mobile .room-type-div-toggle-trigger").bind("click touch",function(){e(this).next(".room-type-div-toggle").slideToggle("fast")}),e("#submit").click(function(t){if(e("#NotListed").is(":checked")&&(e("#note").show(300),e("input[type=submit]").hide(),t.preventDefault()),e("#groupRes").is(":checked")){if(""==e("input[name=groupCode]").val())return e("input[name=groupCode]").addClass("highlight"),!1;if("AUA12"!=e("input[name=groupCode]").val().toUpperCase()&&"AMG2A"!=e("input[name=groupCode]").val().toUpperCase()&&"OIT2A"!=e("input[name=groupCode]").val().toUpperCase()&&"ctp2b"!=e("input[name=groupCode]").val().toUpperCase()&&"AND12"!=e("input[name=groupCode]").val().toUpperCase()&&"YLU2A"!=e("input[name=groupCode]").val().toUpperCase()&&"CTA2P"!=e("input[name=groupCode]").val().toUpperCase()&&"LEF2A"!=e("input[name=groupCode]").val().toUpperCase()&&"MIM2A"!=e("input[name=groupCode]").val().toUpperCase()&&"CUC2A"!=e("input[name=groupCode]").val().toUpperCase()&&"GSA3B"!=e("input[name=groupCode]").val().toUpperCase()&&"ISR1A"!=e("input[name=groupCode]").val().toUpperCase()&&"NIH3X"!=e("input[name=groupCode]").val().toUpperCase()&&"SBA3V"!=e("input[name=groupCode]").val().toUpperCase()&&"TSA4A"!=e("input[name=groupCode]").val().toUpperCase()&&"EBS14"!=e("input[name=groupCode]").val().toUpperCase()&&"AIS16"!=e("input[name=groupCode]").val().toUpperCase()&&"CGP16"!=e("input[name=groupCode]").val().toUpperCase()&&"LEP16"!=e("input[name=groupCode]").val().toUpperCase()&&"LIB6A"!=e("input[name=groupCode]").val().toUpperCase())return e("input[name=groupCode]").addClass("highlight"),!1}}),e("input[name=groupCode]").focus(function(){e(this).removeClass("highlight")}),e("#note").hide(),e(".myRadio").click(function(){e("#note").hide(300),e("#submit").show(),e("input[name=groupCode]").removeClass("highlight")}),e("#NotListed").click(function(){e("#note").show(300),e("input[type=submit]").hide(),e("input[name=GroupCode]").removeClass("highlight")})}(jQuery);
//# sourceMappingURL=data:application/json;base64,
