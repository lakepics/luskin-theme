"use strict";function updateViewportDimensions(){var t=window,e=document,i=e.documentElement,n=e.getElementsByTagName("body")[0],a=t.innerWidth||i.clientWidth||n.clientWidth,o=t.innerHeight||i.clientHeight||n.clientHeight;return{width:a,height:o}}function loadGravatars(){viewport=updateViewportDimensions(),viewport.width>=768&&jQuery(".comment img[data-gravatar]").each(function(){jQuery(this).attr("src",jQuery(this).attr("data-gravatar"))})}var viewport=updateViewportDimensions(),waitForFinalEvent=function(){var t={};return function(e,i,n){n||(n="Don't call this twice without a uniqueId"),t[n]&&clearTimeout(t[n]),t[n]=setTimeout(e,i)}}(),timeToWaitForLast=100;!function(t){t("html").addClass("js");for(var e=0,i=document.getElementsByTagName("input").length;i>e;e++)document.getElementsByTagName("input")[e].className+=" "+document.getElementsByTagName("input")[e].type;for(var n=window.location.hostname,a=document.getElementsByTagName("a"),o=/^https?:\/\/(www.)?/i,r=0,l=a.length;l>r;r++)o.test(a[r].href)&&-1==a[r].href.toLowerCase().indexOf(n)&&(a[r].target="_blank",a[r].className+=" external");t("textarea, input:text").bind("focus click",function(){this.value==this.defaultValue&&(this.value="")}).bind("blur",function(){""===this.value&&(this.value=this.defaultValue)}),t("#main-navigation").clone().insertAfter(".mobile-navigation > a.logo-ucla-mobile").removeAttr("id"),t("#toggle-menu").bind("click touch",function(){t("div.mobile-navigation").hasClass("open")?(t("div.mobile-navigation").animate({width:"0px"},300).removeClass("open").css({display:"hidden"}),t("#container, .not-frontpage #header").animate({left:"0px"},300)):(t("div.mobile-navigation").animate({width:"300px"},300).addClass("open").css({display:"block"}),t("#container, .not-frontpage #header").animate({left:"300px"},300))}),t(".room-types-mobile .room-type-div-toggle").hide(),t(".room-types-mobile .room-type-div-toggle-trigger").bind("click touch",function(){t(this).next(".room-type-div-toggle").slideToggle("fast")})}(jQuery);
//# sourceMappingURL=data:application/json;base64,
