"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(e){function t(e,t,n,l,o){if(t.items.filter("li:eq("+l+")").addClass("active").siblings(".active").removeClass("active"),"undefined"==typeof o&&(o="fast"),o)t.animate({scrollLeft:n},o,function(){i(t)});else{t.scrollLeft(n),i(t)}}function i(e){var t=e.items.filter(".active");if(t.hasClass("-before")){var i=t.prevAll().size();t.removeClass("active"),t=e.items.filter(":not(.-before):eq("+i+")").addClass("active"),e.scrollLeft(e.scrollLeft()+t.position().left)}else if(t.hasClass("-after")){var i=t.prevAll(".-after").size();t.removeClass("active"),t=e.items.filter(":not(.-before):eq("+i+")").addClass("active"),e.scrollLeft(e.scrollLeft()+t.position().left)}}var n={init:function(i){var i=e.extend({},e.fn.lemmonSlider.defaults,i);return this.each(function(){var n=e(this),l=n.data("slider");if(!l){var o=n.find(i.slider),r=n.next().filter(".controls"),s=o.find(i.items),f=1;s.each(function(){f+=e(this).outerWidth(!0)}),o.width(f),i.slideToLast&&o.css("padding-right",n.width()),i.infinite&&(n.attr("data-slider-infinite",!0),f=3*f,o.width(f),s.clone().addClass("-after").insertAfter(s.filter(":last")),s.filter(":first").before(s.clone().addClass("-before")),s=o.find(i.items)),n.items=s,n.options=i,n.bind("nextSlide",function(l,r){var f=n.scrollLeft(),d=0,a=0;s.each(function(t){0==d&&e(this).position().left>1&&(d=e(this).position().left,a=t)}),d>0&&o.outerWidth()-f-n.width()-1>0?t(l,n,f+d,a,"fast"):i.loop&&t(l,n,0,0,"slow")}),n.bind("prevSlide",function(l,r){var f=n.scrollLeft(),d=0,a=0;if(s.each(function(t){e(this).position().left<0&&(d=e(this).position().left,a=t)}),d)t(l,n,f+d,a,"fast");else if(i.loop){var c=o.outerWidth()-n.width(),p=s.filter(":last").position().left;a=s.size()-1,c>p?t(l,n,p,a,"fast"):t(l,n,c,a,"fast")}}),n.bind("nextPage",function(l,o){var r=n.scrollLeft(),d=n.width(),a=0,c=0;s.each(function(t){e(this).position().left<d&&(a=e(this).position().left,c=t)}),a>0&&r+d+1<f?t(l,n,r+a,c,"slow"):i.loop&&t(l,n,0,0,"slow")}),n.bind("prevPage",function(l,r){var f=n.scrollLeft(),d=n.width(),a=0;if(s.each(function(t){e(this).position().left<1-d&&(a=e(this).next().position().left,slide=t)}),f)0==a?t(l,n,0,0,"slow"):t(l,n,f+a,slide,"slow");else if(i.loop){var c=o.outerWidth()-n.width(),p=s.filter(":last").position().left;c>p?n.animate({scrollLeft:p},"slow"):n.animate({scrollLeft:c},"slow")}}),n.bind("slideTo",function(e,i,l){t(e,n,n.scrollLeft()+s.filter(":eq("+i+")").position().left,i,l)}),r.find(".next-slide").click(function(){return n.trigger("nextSlide"),!1}),r.find(".prev-slide").click(function(){return n.trigger("prevSlide"),!1}),r.find(".next-page").click(function(){return n.trigger("nextPage"),!1}),r.find(".prev-page").click(function(){return n.trigger("prevPage"),!1}),n.data("slider",{target:n,options:i})}})},addItem:function(t){var t=e.extend({},e.fn.lemmonSlider.defaults,t),i=e(this),l=i.find(t.slider);i.next().filter(".controls"),l.find(t.items);return t.infinite=i.attr("data-slider-infinite"),!!t.item&&(n.destroy.apply(this),t.prepend?l.prepend(t.item):l.append(t.item),void n.init.apply(this,[t]))},destroy:function(){return this.each(function(){var t=e(this),i=t.next().filter(".controls"),n=t.find("> *:first > *");t.data("slider");t.unbind("nextSlide"),t.unbind("prevSlide"),t.unbind("nextPage"),t.unbind("prevPage"),t.unbind("slideTo"),i.find(".next-slide").unbind("click"),i.find(".prev-slide").unbind("click"),i.find(".next-page").unbind("click"),i.find(".next-page").unbind("click"),t.removeData("slider"),t.attr("data-slider-infinite")&&e.merge(n.filter(".-before"),n.filter(".-after")).each(function(t,i){e(i).remove()})})}};e.fn.lemmonSlider=function(t,i){return null==i&&(i={}),n[t]?n[t].apply(this,Array.prototype.slice.call(arguments,1)):"object"!==("undefined"==typeof t?"undefined":_typeof(t))&&t?void e.error("Method "+t+" does not exist on jQuery.lemmonSlider"):n.init.apply(this,arguments)},e.fn.lemmonSlider.defaults={items:"> *",loop:!0,slideToLast:!1,slider:"> *:first",infinite:!1}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
