"use strict";!function(t){t.fn.fitVids=function(e){var i={customSelector:null},r=document.createElement("div"),a=document.getElementsByTagName("base")[0]||document.getElementsByTagName("script")[0];return r.className="fit-vids-style",r.innerHTML="&shy;<style>               .fluid-width-video-wrapper {                 width: 100%;                              position: relative;                       padding: 0;                            }                                                                                   .fluid-width-video-wrapper iframe,        .fluid-width-video-wrapper object,        .fluid-width-video-wrapper embed {           position: absolute;                       top: 0;                                   left: 0;                                  width: 100%;                              height: 100%;                          }                                       </style>",a.parentNode.insertBefore(r,a),e&&t.extend(i,e),this.each(function(){var e=["iframe[src*='player.vimeo.com']","iframe[src*='www.youtube.com']","iframe[src*='www.kickstarter.com']","object","embed"];i.customSelector&&e.push(i.customSelector);var r=t(this).find(e.join(","));r.each(function(){var e=t(this);if(!("embed"===this.tagName.toLowerCase()&&e.parent("object").length||e.parent(".fluid-width-video-wrapper").length)){var i="object"===this.tagName.toLowerCase()||e.attr("height")&&!isNaN(parseInt(e.attr("height"),10))?parseInt(e.attr("height"),10):e.height(),r=isNaN(parseInt(e.attr("width"),10))?e.width():parseInt(e.attr("width"),10),a=i/r;if(!e.attr("id")){var d="fitvid"+Math.floor(999999*Math.random());e.attr("id",d)}e.wrap('<div class="fluid-width-video-wrapper"></div>').parent(".fluid-width-video-wrapper").css("padding-top",100*a+"%"),e.removeAttr("height").removeAttr("width")}})})}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnJhcnkvcGx1Z2lucy9qcXVlcnkuYnhzbGlkZXIvcGx1Z2lucy9qcXVlcnkuZml0dmlkcy5qcyJdLCJuYW1lcyI6WyIkIiwiZm4iLCJmaXRWaWRzIiwib3B0aW9ucyIsInNldHRpbmdzIiwiY3VzdG9tU2VsZWN0b3IiLCJkaXYiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJyZWYiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImNsYXNzTmFtZSIsImlubmVySFRNTCIsInBhcmVudE5vZGUiLCJpbnNlcnRCZWZvcmUiLCJleHRlbmQiLCJ0aGlzIiwiZWFjaCIsInNlbGVjdG9ycyIsInB1c2giLCIkYWxsVmlkZW9zIiwiZmluZCIsImpvaW4iLCIkdGhpcyIsInRhZ05hbWUiLCJ0b0xvd2VyQ2FzZSIsInBhcmVudCIsImxlbmd0aCIsImhlaWdodCIsImF0dHIiLCJpc05hTiIsInBhcnNlSW50Iiwid2lkdGgiLCJhc3BlY3RSYXRpbyIsInZpZGVvSUQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJ3cmFwIiwiY3NzIiwicmVtb3ZlQXR0ciIsImpRdWVyeSJdLCJtYXBwaW5ncyI6IkFBQUEsY0FZQSxTQUFXQSxHQUlUQSxFQUFFQyxHQUFHQyxRQUFVLFNBQVVDLEdBQ3ZCLEdBQUlDLElBQ0ZDLGVBQWdCLE1BR2RDLEVBQU1DLFNBQVNDLGNBQWMsT0FDN0JDLEVBQU1GLFNBQVNHLHFCQUFxQixRQUFRLElBQU1ILFNBQVNHLHFCQUFxQixVQUFVLEVBMkI5RixPQXpCQUosR0FBSUssVUFBWSxpQkFDaEJMLEVBQUlNLFVBQVksMHBCQWtCaEJILEVBQUlJLFdBQVdDLGFBQWFSLEVBQUlHLEdBRTNCTixHQUNISCxFQUFFZSxPQUFRWCxFQUFVRCxHQUdmYSxLQUFLQyxLQUFLLFdBQ2YsR0FBSUMsSUFDRixrQ0FDQSxpQ0FDQSxxQ0FDQSxTQUNBLFFBR0VkLEdBQVNDLGdCQUNYYSxFQUFVQyxLQUFLZixFQUFTQyxlQUcxQixJQUFJZSxHQUFhcEIsRUFBRWdCLE1BQU1LLEtBQUtILEVBQVVJLEtBQUssS0FFN0NGLEdBQVdILEtBQUssV0FDZCxHQUFJTSxHQUFRdkIsRUFBRWdCLEtBQ2QsTUFBbUMsVUFBL0JBLEtBQUtRLFFBQVFDLGVBQTZCRixFQUFNRyxPQUFPLFVBQVVDLFFBQVVKLEVBQU1HLE9BQU8sOEJBQThCQyxRQUExSCxDQUNBLEdBQUlDLEdBQTBDLFdBQS9CWixLQUFLUSxRQUFRQyxlQUErQkYsRUFBTU0sS0FBSyxZQUFjQyxNQUFNQyxTQUFTUixFQUFNTSxLQUFLLFVBQVcsS0FBVUUsU0FBU1IsRUFBTU0sS0FBSyxVQUFXLElBQU1OLEVBQU1LLFNBQzFLSSxFQUFTRixNQUFNQyxTQUFTUixFQUFNTSxLQUFLLFNBQVUsS0FBMkNOLEVBQU1TLFFBQTFDRCxTQUFTUixFQUFNTSxLQUFLLFNBQVUsSUFDbEZJLEVBQWNMLEVBQVNJLENBQzNCLEtBQUlULEVBQU1NLEtBQUssTUFBTSxDQUNuQixHQUFJSyxHQUFVLFNBQVdDLEtBQUtDLE1BQW9CLE9BQWRELEtBQUtFLFNBQ3pDZCxHQUFNTSxLQUFLLEtBQU1LLEdBRW5CWCxFQUFNZSxLQUFLLGlEQUFpRFosT0FBTyw4QkFBOEJhLElBQUksY0FBOEIsSUFBZE4sRUFBbUIsS0FDeElWLEVBQU1pQixXQUFXLFVBQVVBLFdBQVcsZ0JBSTFDQyIsImZpbGUiOiJsaWJyYXJ5L3BsdWdpbnMvanF1ZXJ5LmJ4c2xpZGVyL3BsdWdpbnMvanF1ZXJ5LmZpdHZpZHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKmdsb2JhbCBqUXVlcnkgKi9cbi8qanNoaW50IG11bHRpc3RyOnRydWUgYnJvd3Nlcjp0cnVlICovXG4vKiFcbiogRml0VmlkcyAxLjBcbipcbiogQ29weXJpZ2h0IDIwMTEsIENocmlzIENveWllciAtIGh0dHA6Ly9jc3MtdHJpY2tzLmNvbSArIERhdmUgUnVwZXJ0IC0gaHR0cDovL2RhdmVydXBlcnQuY29tXG4qIENyZWRpdCB0byBUaGllcnJ5IEtvYmxlbnR6IC0gaHR0cDovL3d3dy5hbGlzdGFwYXJ0LmNvbS9hcnRpY2xlcy9jcmVhdGluZy1pbnRyaW5zaWMtcmF0aW9zLWZvci12aWRlby9cbiogUmVsZWFzZWQgdW5kZXIgdGhlIFdURlBMIGxpY2Vuc2UgLSBodHRwOi8vc2FtLnpveS5vcmcvd3RmcGwvXG4qXG4qIERhdGU6IFRodSBTZXB0IDAxIDE4OjAwOjAwIDIwMTEgLTA1MDBcbiovXG5cbihmdW5jdGlvbiggJCApe1xuXG4gIFwidXNlIHN0cmljdFwiO1xuXG4gICQuZm4uZml0VmlkcyA9IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuICAgIHZhciBzZXR0aW5ncyA9IHtcbiAgICAgIGN1c3RvbVNlbGVjdG9yOiBudWxsXG4gICAgfTtcblxuICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSxcbiAgICAgICAgcmVmID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2Jhc2UnKVswXSB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07XG5cbiAgICBkaXYuY2xhc3NOYW1lID0gJ2ZpdC12aWRzLXN0eWxlJztcbiAgICBkaXYuaW5uZXJIVE1MID0gJyZzaHk7PHN0eWxlPiAgICAgICAgIFxcXG4gICAgICAuZmx1aWQtd2lkdGgtdmlkZW8td3JhcHBlciB7ICAgICAgICBcXFxuICAgICAgICAgd2lkdGg6IDEwMCU7ICAgICAgICAgICAgICAgICAgICAgXFxcbiAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgICAgICAgICAgICAgIFxcXG4gICAgICAgICBwYWRkaW5nOiAwOyAgICAgICAgICAgICAgICAgICAgICBcXFxuICAgICAgfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcXG4gICAgICAuZmx1aWQtd2lkdGgtdmlkZW8td3JhcHBlciBpZnJhbWUsICBcXFxuICAgICAgLmZsdWlkLXdpZHRoLXZpZGVvLXdyYXBwZXIgb2JqZWN0LCAgXFxcbiAgICAgIC5mbHVpZC13aWR0aC12aWRlby13cmFwcGVyIGVtYmVkIHsgIFxcXG4gICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7ICAgICAgICAgICAgICBcXFxuICAgICAgICAgdG9wOiAwOyAgICAgICAgICAgICAgICAgICAgICAgICAgXFxcbiAgICAgICAgIGxlZnQ6IDA7ICAgICAgICAgICAgICAgICAgICAgICAgIFxcXG4gICAgICAgICB3aWR0aDogMTAwJTsgICAgICAgICAgICAgICAgICAgICBcXFxuICAgICAgICAgaGVpZ2h0OiAxMDAlOyAgICAgICAgICAgICAgICAgICAgXFxcbiAgICAgIH0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcXG4gICAgPC9zdHlsZT4nO1xuXG4gICAgcmVmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGRpdixyZWYpO1xuXG4gICAgaWYgKCBvcHRpb25zICkge1xuICAgICAgJC5leHRlbmQoIHNldHRpbmdzLCBvcHRpb25zICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe1xuICAgICAgdmFyIHNlbGVjdG9ycyA9IFtcbiAgICAgICAgXCJpZnJhbWVbc3JjKj0ncGxheWVyLnZpbWVvLmNvbSddXCIsXG4gICAgICAgIFwiaWZyYW1lW3NyYyo9J3d3dy55b3V0dWJlLmNvbSddXCIsXG4gICAgICAgIFwiaWZyYW1lW3NyYyo9J3d3dy5raWNrc3RhcnRlci5jb20nXVwiLFxuICAgICAgICBcIm9iamVjdFwiLFxuICAgICAgICBcImVtYmVkXCJcbiAgICAgIF07XG5cbiAgICAgIGlmIChzZXR0aW5ncy5jdXN0b21TZWxlY3Rvcikge1xuICAgICAgICBzZWxlY3RvcnMucHVzaChzZXR0aW5ncy5jdXN0b21TZWxlY3Rvcik7XG4gICAgICB9XG5cbiAgICAgIHZhciAkYWxsVmlkZW9zID0gJCh0aGlzKS5maW5kKHNlbGVjdG9ycy5qb2luKCcsJykpO1xuXG4gICAgICAkYWxsVmlkZW9zLmVhY2goZnVuY3Rpb24oKXtcbiAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICAgaWYgKHRoaXMudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnZW1iZWQnICYmICR0aGlzLnBhcmVudCgnb2JqZWN0JykubGVuZ3RoIHx8ICR0aGlzLnBhcmVudCgnLmZsdWlkLXdpZHRoLXZpZGVvLXdyYXBwZXInKS5sZW5ndGgpIHsgcmV0dXJuOyB9XG4gICAgICAgIHZhciBoZWlnaHQgPSAoIHRoaXMudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnb2JqZWN0JyB8fCAoJHRoaXMuYXR0cignaGVpZ2h0JykgJiYgIWlzTmFOKHBhcnNlSW50KCR0aGlzLmF0dHIoJ2hlaWdodCcpLCAxMCkpKSApID8gcGFyc2VJbnQoJHRoaXMuYXR0cignaGVpZ2h0JyksIDEwKSA6ICR0aGlzLmhlaWdodCgpLFxuICAgICAgICAgICAgd2lkdGggPSAhaXNOYU4ocGFyc2VJbnQoJHRoaXMuYXR0cignd2lkdGgnKSwgMTApKSA/IHBhcnNlSW50KCR0aGlzLmF0dHIoJ3dpZHRoJyksIDEwKSA6ICR0aGlzLndpZHRoKCksXG4gICAgICAgICAgICBhc3BlY3RSYXRpbyA9IGhlaWdodCAvIHdpZHRoO1xuICAgICAgICBpZighJHRoaXMuYXR0cignaWQnKSl7XG4gICAgICAgICAgdmFyIHZpZGVvSUQgPSAnZml0dmlkJyArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSo5OTk5OTkpO1xuICAgICAgICAgICR0aGlzLmF0dHIoJ2lkJywgdmlkZW9JRCk7XG4gICAgICAgIH1cbiAgICAgICAgJHRoaXMud3JhcCgnPGRpdiBjbGFzcz1cImZsdWlkLXdpZHRoLXZpZGVvLXdyYXBwZXJcIj48L2Rpdj4nKS5wYXJlbnQoJy5mbHVpZC13aWR0aC12aWRlby13cmFwcGVyJykuY3NzKCdwYWRkaW5nLXRvcCcsIChhc3BlY3RSYXRpbyAqIDEwMCkrXCIlXCIpO1xuICAgICAgICAkdGhpcy5yZW1vdmVBdHRyKCdoZWlnaHQnKS5yZW1vdmVBdHRyKCd3aWR0aCcpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG59KSggalF1ZXJ5ICk7XG4iXX0=
