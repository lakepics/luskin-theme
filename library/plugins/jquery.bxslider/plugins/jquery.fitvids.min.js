"use strict";!function(t){t.fn.fitVids=function(e){var i={customSelector:null},r=document.createElement("div"),a=document.getElementsByTagName("base")[0]||document.getElementsByTagName("script")[0];return r.className="fit-vids-style",r.innerHTML="&shy;<style>               .fluid-width-video-wrapper {                 width: 100%;                              position: relative;                       padding: 0;                            }                                                                                   .fluid-width-video-wrapper iframe,        .fluid-width-video-wrapper object,        .fluid-width-video-wrapper embed {           position: absolute;                       top: 0;                                   left: 0;                                  width: 100%;                              height: 100%;                          }                                       </style>",a.parentNode.insertBefore(r,a),e&&t.extend(i,e),this.each(function(){var e=["iframe[src*='player.vimeo.com']","iframe[src*='www.youtube.com']","iframe[src*='www.kickstarter.com']","object","embed"];i.customSelector&&e.push(i.customSelector);var r=t(this).find(e.join(","));r.each(function(){var e=t(this);if(!("embed"===this.tagName.toLowerCase()&&e.parent("object").length||e.parent(".fluid-width-video-wrapper").length)){var i="object"===this.tagName.toLowerCase()||e.attr("height")&&!isNaN(parseInt(e.attr("height"),10))?parseInt(e.attr("height"),10):e.height(),r=isNaN(parseInt(e.attr("width"),10))?e.width():parseInt(e.attr("width"),10),a=i/r;if(!e.attr("id")){var d="fitvid"+Math.floor(999999*Math.random());e.attr("id",d)}e.wrap('<div class="fluid-width-video-wrapper"></div>').parent(".fluid-width-video-wrapper").css("padding-top",100*a+"%"),e.removeAttr("height").removeAttr("width")}})})}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnJhcnkvcGx1Z2lucy9qcXVlcnkuYnhzbGlkZXIvcGx1Z2lucy9qcXVlcnkuZml0dmlkcy5qcyJdLCJuYW1lcyI6WyIkIiwiZm4iLCJmaXRWaWRzIiwib3B0aW9ucyIsInNldHRpbmdzIiwiY3VzdG9tU2VsZWN0b3IiLCJkaXYiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJyZWYiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImNsYXNzTmFtZSIsImlubmVySFRNTCIsInBhcmVudE5vZGUiLCIkdGhpcyIsImV4dGVuZCIsInRoaXMiLCJhc3BlY3RSYXRpbyIsInNlbGVjdG9ycyIsImF0dHIiLCJwdXNoIiwiJGFsbFZpZGVvcyIsImZpbmQiLCJqb2luIiwiZWFjaCIsImpRdWVyeSIsInRhZ05hbWUiLCJ0b0xvd2VyQ2FzZSIsInBhcmVudCIsImxlbmd0aCIsImhlaWdodCIsImlzTmFOIiwicGFyc2VJbnQiLCJ3aWR0aCIsInZpZGVvSUQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJ3cmFwIiwiY3NzIiwicmVtb3ZlQXR0ciJdLCJtYXBwaW5ncyI6IkFBQUEsY0FZQSxTQUFXQSxHQUlUQSxFQUFFQyxHQUFHQyxRQUFVLFNBQVVDLEdBQ3ZCLEdBQUlDLElBQ0ZDLGVBQWdCLE1BR2RDLEVBQU1DLFNBQVNDLGNBQWMsT0FDN0JDLEVBQU1GLFNBQVNHLHFCQUFxQixRQUFRLElBQU1ILFNBQVNHLHFCQUFxQixVQUFVLEVBNkMxRixPQTNDSkosR0FBSUssVUFBWSxpQkFDaEJMLEVBQUlNLFVBQVksMHBCQXdDWkgsRUFBQUksV0FBSUMsYUFBSlIsRUFBQUcsR0FDb0lOLEdBQVNILEVBQUFlLE9BQUFYLEVBQUFELEdBQzdJYSxLQUVJQyxLQUFBQSxXQUNKLEdBQUFDLElBQUksa0NBQWlCLGlDQUFBLHFDQUFBLFNBQUEsUUFFbkJKLEdBQU1LLGdCQUNQRCxFQUFBRSxLQUFBaEIsRUFBQUMsZUFHRixJQVpEZ0IsR0FBQXJCLEVBQUFnQixNQUFBTSxLQUFBSixFQUFBSyxLQUFBLEtBaERKRixHQUFBRyxLQUFBLFdBK0RFQyxHQW5FSlgsR0FBQWQsRUFBQWdCLEtBa0VRLE1BQW1DLFVBQS9CQSxLQUFLVSxRQUFRQyxlQUE2QmIsRUFBTWMsT0FBTyxVQUFVQyxRQUFVZixFQUFNYyxPQUFPLDhCQUE4QkMsUUFBMUgsQ0FHQSxHQUFJQyxHQUF3QyxXQUEvQmQsS0FBS1UsUUFBUUMsZUFBOEJiLEVBQU1LLEtBQUssWUFBY1ksTUFBTUMsU0FBU2xCLEVBQU1LLEtBQUssVUFBVyxLQUFPYSxTQUFTbEIsRUFBTUssS0FBSyxVQUFXLElBQU1MLEVBQU1nQixTQUNwS0csRUFBU0YsTUFBTUMsU0FBU2xCLEVBQU1LLEtBQUssU0FBVSxLQUEyQ0wsRUFBTW1CLFFBQTFDRCxTQUFTbEIsRUFBTUssS0FBSyxTQUFVLElBQ2xGRixFQUFjYSxFQUFTRyxDQUMzQixLQUFLbkIsRUFBTUssS0FBSyxNQUFPLENBQ3JCLEdBQUllLEdBQVUsU0FBV0MsS0FBS0MsTUFBc0IsT0FBaEJELEtBQUtFLFNBQ3pDdkIsR0FBTUssS0FBSyxLQUFNZSxHQUVuQnBCLEVBQU13QixLQUFLLGlEQUFpRFYsT0FBTyw4QkFBOEJXLElBQUksY0FBNkIsSUFBZHRCLEVBQW9CLEtBQ3hJSCxFQUFNMEIsV0FBVyxVQUFVQSxXQUFXLGdCQUkzQ2YiLCJmaWxlIjoibGlicmFyeS9wbHVnaW5zL2pxdWVyeS5ieHNsaWRlci9wbHVnaW5zL2pxdWVyeS5maXR2aWRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypnbG9iYWwgalF1ZXJ5ICovXHJcbi8qanNoaW50IG11bHRpc3RyOnRydWUgYnJvd3Nlcjp0cnVlICovXHJcbi8qIVxyXG4qIEZpdFZpZHMgMS4wXHJcbipcclxuKiBDb3B5cmlnaHQgMjAxMSwgQ2hyaXMgQ295aWVyIC0gaHR0cDovL2Nzcy10cmlja3MuY29tICsgRGF2ZSBSdXBlcnQgLSBodHRwOi8vZGF2ZXJ1cGVydC5jb21cclxuKiBDcmVkaXQgdG8gVGhpZXJyeSBLb2JsZW50eiAtIGh0dHA6Ly93d3cuYWxpc3RhcGFydC5jb20vYXJ0aWNsZXMvY3JlYXRpbmctaW50cmluc2ljLXJhdGlvcy1mb3ItdmlkZW8vXHJcbiogUmVsZWFzZWQgdW5kZXIgdGhlIFdURlBMIGxpY2Vuc2UgLSBodHRwOi8vc2FtLnpveS5vcmcvd3RmcGwvXHJcbipcclxuKiBEYXRlOiBUaHUgU2VwdCAwMSAxODowMDowMCAyMDExIC0wNTAwXHJcbiovXHJcblxyXG4oZnVuY3Rpb24oICQgKXtcclxuXHJcbiAgXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4gICQuZm4uZml0VmlkcyA9IGZ1bmN0aW9uKCBvcHRpb25zICkge1xyXG4gICAgdmFyIHNldHRpbmdzID0ge1xyXG4gICAgICBjdXN0b21TZWxlY3RvcjogbnVsbFxyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JyksXHJcbiAgICAgICAgcmVmID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2Jhc2UnKVswXSB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07XHJcblxyXG4gICAgZGl2LmNsYXNzTmFtZSA9ICdmaXQtdmlkcy1zdHlsZSc7XHJcbiAgICBkaXYuaW5uZXJIVE1MID0gJyZzaHk7PHN0eWxlPiAgICAgICAgIFxcXHJcbiAgICAgIC5mbHVpZC13aWR0aC12aWRlby13cmFwcGVyIHsgICAgICAgIFxcXHJcbiAgICAgICAgIHdpZHRoOiAxMDAlOyAgICAgICAgICAgICAgICAgICAgIFxcXHJcbiAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgICAgICAgICAgICAgIFxcXHJcbiAgICAgICAgIHBhZGRpbmc6IDA7ICAgICAgICAgICAgICAgICAgICAgIFxcXHJcbiAgICAgIH0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcXHJcbiAgICAgIC5mbHVpZC13aWR0aC12aWRlby13cmFwcGVyIGlmcmFtZSwgIFxcXHJcbiAgICAgIC5mbHVpZC13aWR0aC12aWRlby13cmFwcGVyIG9iamVjdCwgIFxcXHJcbiAgICAgIC5mbHVpZC13aWR0aC12aWRlby13cmFwcGVyIGVtYmVkIHsgIFxcXHJcbiAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgICAgICAgICAgICAgIFxcXHJcbiAgICAgICAgIHRvcDogMDsgICAgICAgICAgICAgICAgICAgICAgICAgIFxcXHJcbiAgICAgICAgIGxlZnQ6IDA7ICAgICAgICAgICAgICAgICAgICAgICAgIFxcXHJcbiAgICAgICAgIHdpZHRoOiAxMDAlOyAgICAgICAgICAgICAgICAgICAgIFxcXHJcbiAgICAgICAgIGhlaWdodDogMTAwJTsgICAgICAgICAgICAgICAgICAgIFxcXHJcbiAgICAgIH0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcXHJcbiAgICA8L3N0eWxlPic7XHJcblxyXG4gICAgcmVmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGRpdixyZWYpO1xyXG5cclxuICAgIGlmICggb3B0aW9ucyApIHtcclxuICAgICAgJC5leHRlbmQoIHNldHRpbmdzLCBvcHRpb25zICk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe1xyXG4gICAgICB2YXIgc2VsZWN0b3JzID0gW1xyXG4gICAgICAgIFwiaWZyYW1lW3NyYyo9J3BsYXllci52aW1lby5jb20nXVwiLFxyXG4gICAgICAgIFwiaWZyYW1lW3NyYyo9J3d3dy55b3V0dWJlLmNvbSddXCIsXHJcbiAgICAgICAgXCJpZnJhbWVbc3JjKj0nd3d3LmtpY2tzdGFydGVyLmNvbSddXCIsXHJcbiAgICAgICAgXCJvYmplY3RcIixcclxuICAgICAgICBcImVtYmVkXCJcclxuICAgICAgXTtcclxuXHJcbiAgICAgIGlmIChzZXR0aW5ncy5jdXN0b21TZWxlY3Rvcikge1xyXG4gICAgICAgIHNlbGVjdG9ycy5wdXNoKHNldHRpbmdzLmN1c3RvbVNlbGVjdG9yKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyICRhbGxWaWRlb3MgPSAkKHRoaXMpLmZpbmQoc2VsZWN0b3JzLmpvaW4oJywnKSk7XHJcblxyXG4gICAgICAkYWxsVmlkZW9zLmVhY2goZnVuY3Rpb24oKXtcclxuICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xyXG4gICAgICAgIGlmICh0aGlzLnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2VtYmVkJyAmJiAkdGhpcy5wYXJlbnQoJ29iamVjdCcpLmxlbmd0aCB8fCAkdGhpcy5wYXJlbnQoJy5mbHVpZC13aWR0aC12aWRlby13cmFwcGVyJykubGVuZ3RoKSB7IHJldHVybjsgfVxyXG4gICAgICAgIHZhciBoZWlnaHQgPSAoIHRoaXMudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnb2JqZWN0JyB8fCAoJHRoaXMuYXR0cignaGVpZ2h0JykgJiYgIWlzTmFOKHBhcnNlSW50KCR0aGlzLmF0dHIoJ2hlaWdodCcpLCAxMCkpKSApID8gcGFyc2VJbnQoJHRoaXMuYXR0cignaGVpZ2h0JyksIDEwKSA6ICR0aGlzLmhlaWdodCgpLFxyXG4gICAgICAgICAgICB3aWR0aCA9ICFpc05hTihwYXJzZUludCgkdGhpcy5hdHRyKCd3aWR0aCcpLCAxMCkpID8gcGFyc2VJbnQoJHRoaXMuYXR0cignd2lkdGgnKSwgMTApIDogJHRoaXMud2lkdGgoKSxcclxuICAgICAgICAgICAgYXNwZWN0UmF0aW8gPSBoZWlnaHQgLyB3aWR0aDtcclxuICAgICAgICBpZighJHRoaXMuYXR0cignaWQnKSl7XHJcbiAgICAgICAgICB2YXIgdmlkZW9JRCA9ICdmaXR2aWQnICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjk5OTk5OSk7XHJcbiAgICAgICAgICAkdGhpcy5hdHRyKCdpZCcsIHZpZGVvSUQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkdGhpcy53cmFwKCc8ZGl2IGNsYXNzPVwiZmx1aWQtd2lkdGgtdmlkZW8td3JhcHBlclwiPjwvZGl2PicpLnBhcmVudCgnLmZsdWlkLXdpZHRoLXZpZGVvLXdyYXBwZXInKS5jc3MoJ3BhZGRpbmctdG9wJywgKGFzcGVjdFJhdGlvICogMTAwKStcIiVcIik7XHJcbiAgICAgICAgJHRoaXMucmVtb3ZlQXR0cignaGVpZ2h0JykucmVtb3ZlQXR0cignd2lkdGgnKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9O1xyXG59KSggalF1ZXJ5ICk7XHJcbiJdfQ==
